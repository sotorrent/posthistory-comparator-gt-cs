Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
24074851;10463373;1377003;2;5e00fc2b-9e0b-4761-84d8-8039b4534cd5;2012-05-05 15:39:08.0;"1.start in single mode choice and set all the listeners (this is done where you set the list adapter)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE); &#xD;&#xA;    listView.setOnItemLongClickListener(liListener);&#xD;&#xA;    listView.setMultiChoiceModeListener(mcListener);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;2.implement the interfaces&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;&#xD;&#xA;    private OnItemLongClickListener liListener = new OnItemLongClickListener() {&#xD;&#xA;    		@Override&#xD;&#xA;    		public boolean onItemLongClick(AdapterView<?> parent, View view,&#xD;&#xA;    				int position, long id) {&#xD;&#xA;    			listView.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);			&#xD;&#xA;    			return true;&#xD;&#xA;    		}&#xD;&#xA;    	};&#xD;&#xA;	&#xD;&#xA;	private MultiChoiceModeListener mcListener = new MultiChoiceModeListener() {&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onItemCheckedStateChanged(ActionMode mode, int position,&#xD;&#xA;	                                          long id, boolean checked) {&#xD;&#xA;	        // Here you can do something when items are selected/deselected,&#xD;&#xA;	        // such as update the title in the CAB&#xD;&#xA;	    	final int checkedCount = listView.getCheckedItemCount();&#xD;&#xA;            switch (checkedCount) {&#xD;&#xA;                case 0:&#xD;&#xA;                    mode.setSubtitle(null);&#xD;&#xA;                    break;&#xD;&#xA;                case 1:&#xD;&#xA;                    mode.setSubtitle(""One item selected"");&#xD;&#xA;                    break;&#xD;&#xA;                default:&#xD;&#xA;                    mode.setSubtitle("""" + checkedCount + "" items selected"");&#xD;&#xA;                    break;&#xD;&#xA;            }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onActionItemClicked(ActionMode mode, MenuItem item) {&#xD;&#xA;	        // Respond to clicks on the actions in the CAB&#xD;&#xA;	        switch (item.getItemId()) {&#xD;&#xA;	            case R.id.delete:&#xD;&#xA;	                deleteCommand();&#xD;&#xA;	                mode.finish(); // Action picked, so close the CAB&#xD;&#xA;	                return true;&#xD;&#xA;	            default:&#xD;&#xA;	                return false;&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onCreateActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Inflate the menu for the CAB&#xD;&#xA;	        MenuInflater inflater = mode.getMenuInflater();&#xD;&#xA;	        inflater.inflate(R.menu.context_menu, menu);&#xD;&#xA;	        return true;&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onDestroyActionMode(ActionMode mode) {&#xD;&#xA;	        // Here you can make any necessary updates to the activity when&#xD;&#xA;	        // the CAB is removed. By default, selected items are deselected/unchecked.	&#xD;&#xA;	    	&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onPrepareActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Here you can perform updates to the CAB due to&#xD;&#xA;	        // an invalidate() request&#xD;&#xA;	        return false;&#xD;&#xA;	    }&#xD;&#xA;	};&#xD;&#xA;&#xD;&#xA;3.the TRICK to make it work is to go back to the single choice mode not inside the  implementation (onDestroyActionMode) but right inside your click responding action (my case, deleteCommand())&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    private void deleteCommand() {		&#xD;&#xA;    		System.out.println(""deleted "");&#xD;&#xA;    		listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);&#xD;&#xA;    	}";;
24075036;10463373;1377003;5;1352961e-dc71-438b-a81e-701be8bb1691;2012-05-05 15:45:35.0;"1.start in single mode choice and set all the listeners (this is done where you set the list adapter)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE); &#xD;&#xA;    listView.setOnItemLongClickListener(liListener);&#xD;&#xA;    listView.setMultiChoiceModeListener(mcListener);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;2.implement the interfaces to switch between choice modes. The TRICK to make it work is to go back to the single choice mode not inside onDestroyActionMode but right inside onActionItemClicked!!&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;&#xD;&#xA;    private OnItemLongClickListener liListener = new OnItemLongClickListener() {&#xD;&#xA;    		@Override&#xD;&#xA;    		public boolean onItemLongClick(AdapterView<?> parent, View view,&#xD;&#xA;    				int position, long id) {&#xD;&#xA;    			listView.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);			&#xD;&#xA;    			return true;&#xD;&#xA;    		}&#xD;&#xA;    	};&#xD;&#xA;	&#xD;&#xA;	private MultiChoiceModeListener mcListener = new MultiChoiceModeListener() {&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onItemCheckedStateChanged(ActionMode mode, int position,&#xD;&#xA;	                                          long id, boolean checked) {&#xD;&#xA;	        // Here you can do something when items are selected/deselected,&#xD;&#xA;	        // such as update the title in the CAB&#xD;&#xA;	    	final int checkedCount = listView.getCheckedItemCount();&#xD;&#xA;            switch (checkedCount) {&#xD;&#xA;                case 0:&#xD;&#xA;                    mode.setSubtitle(null);&#xD;&#xA;                    break;&#xD;&#xA;                case 1:&#xD;&#xA;                    mode.setSubtitle(""One item selected"");&#xD;&#xA;                    break;&#xD;&#xA;                default:&#xD;&#xA;                    mode.setSubtitle("""" + checkedCount + "" items selected"");&#xD;&#xA;                    break;&#xD;&#xA;            }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onActionItemClicked(ActionMode mode, MenuItem item) {&#xD;&#xA;	        // Respond to clicks on the actions in the CAB&#xD;&#xA;	        switch (item.getItemId()) {&#xD;&#xA;	            case R.id.delete:&#xD;&#xA;	                deleteCommand();&#xD;&#xA;                    listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);&#xD;&#xA;	                mode.finish(); // Action picked, so close the CAB&#xD;&#xA;	                return true;&#xD;&#xA;	            default:&#xD;&#xA;	                return false;&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onCreateActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Inflate the menu for the CAB&#xD;&#xA;	        MenuInflater inflater = mode.getMenuInflater();&#xD;&#xA;	        inflater.inflate(R.menu.context_menu, menu);&#xD;&#xA;	        return true;&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onDestroyActionMode(ActionMode mode) {&#xD;&#xA;	        // Here you can make any necessary updates to the activity when&#xD;&#xA;	        // the CAB is removed. By default, selected items are deselected/unchecked.	&#xD;&#xA;	    	&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onPrepareActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Here you can perform updates to the CAB due to&#xD;&#xA;	        // an invalidate() request&#xD;&#xA;	        return false;&#xD;&#xA;	    }&#xD;&#xA;	};&#xD;&#xA;";;deleted 56 characters in body
24075338;10463373;1377003;5;92cc3b80-8b4c-4569-89d4-04cae69c463d;2012-05-05 15:56:09.0;"1.start in single mode choice and set all the listeners (this is done where you set the list adapter)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE); &#xD;&#xA;    listView.setOnItemLongClickListener(liListener);&#xD;&#xA;    listView.setMultiChoiceModeListener(mcListener);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;2.implement the interfaces to switch between choice modes. The TRICK to make it work is to go back to the single choice mode not inside onDestroyActionMode but right inside onActionItemClicked and just before you destroy the action mode!!&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;&#xD;&#xA;    private OnItemLongClickListener liListener = new OnItemLongClickListener() {&#xD;&#xA;    		@Override&#xD;&#xA;    		public boolean onItemLongClick(AdapterView<?> parent, View view,&#xD;&#xA;    				int position, long id) {&#xD;&#xA;    			listView.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);			&#xD;&#xA;    			return true;&#xD;&#xA;    		}&#xD;&#xA;    	};&#xD;&#xA;	&#xD;&#xA;	private MultiChoiceModeListener mcListener = new MultiChoiceModeListener() {&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onItemCheckedStateChanged(ActionMode mode, int position,&#xD;&#xA;	                                          long id, boolean checked) {&#xD;&#xA;	        // Here you can do something when items are selected/deselected,&#xD;&#xA;	        // such as update the title in the CAB&#xD;&#xA;	    	final int checkedCount = listView.getCheckedItemCount();&#xD;&#xA;            switch (checkedCount) {&#xD;&#xA;                case 0:&#xD;&#xA;                    mode.setSubtitle(null);&#xD;&#xA;                    break;&#xD;&#xA;                case 1:&#xD;&#xA;                    mode.setSubtitle(""One item selected"");&#xD;&#xA;                    break;&#xD;&#xA;                default:&#xD;&#xA;                    mode.setSubtitle("""" + checkedCount + "" items selected"");&#xD;&#xA;                    break;&#xD;&#xA;            }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onActionItemClicked(ActionMode mode, MenuItem item) {&#xD;&#xA;	        // Respond to clicks on the actions in the CAB&#xD;&#xA;	        switch (item.getItemId()) {&#xD;&#xA;	            case R.id.delete:&#xD;&#xA;	                deleteCommand();&#xD;&#xA;                    listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);&#xD;&#xA;	                mode.finish(); // Action picked, so close the CAB&#xD;&#xA;	                return true;&#xD;&#xA;	            default:&#xD;&#xA;	                return false;&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onCreateActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Inflate the menu for the CAB&#xD;&#xA;	        MenuInflater inflater = mode.getMenuInflater();&#xD;&#xA;	        inflater.inflate(R.menu.context_menu, menu);&#xD;&#xA;	        return true;&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onDestroyActionMode(ActionMode mode) {&#xD;&#xA;	        // Here you can make any necessary updates to the activity when&#xD;&#xA;	        // the CAB is removed. By default, selected items are deselected/unchecked.	&#xD;&#xA;	    	&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onPrepareActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Here you can perform updates to the CAB due to&#xD;&#xA;	        // an invalidate() request&#xD;&#xA;	        return false;&#xD;&#xA;	    }&#xD;&#xA;	};&#xD;&#xA;";;added 49 characters in body
24077691;10463373;1377003;5;00620d34-1969-4dbd-86d6-7d73e30754c2;2012-05-05 17:29:32.0;"1.start in single mode choice and set all the listeners (this is done where you set the list adapter)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE); &#xD;&#xA;    listView.setOnItemLongClickListener(liListener);&#xD;&#xA;    listView.setMultiChoiceModeListener(mcListener);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;2.implement the interfaces to switch between choice modes. The TRICK to make it work is to switch back to single choice mode outside the implementation, meaning AFTER you destroy the action mode!! So just use a simple flag (defined as an instance variable ""isCABDestroyed"") to mark the CAB destruction in order to set the single choice mode on normal list item click call outside the action mode implementation.&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;&#xD;&#xA;    private OnItemLongClickListener liListener = new OnItemLongClickListener() {&#xD;&#xA;    		@Override&#xD;&#xA;    		public boolean onItemLongClick(AdapterView<?> parent, View view,&#xD;&#xA;    				int position, long id) {&#xD;&#xA;    			listView.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);&#xD;&#xA;                isCABDestroyed = false;				&#xD;&#xA;    			return true;&#xD;&#xA;    		}&#xD;&#xA;    	};&#xD;&#xA;	&#xD;&#xA;	private MultiChoiceModeListener mcListener = new MultiChoiceModeListener() {&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onItemCheckedStateChanged(ActionMode mode, int position,&#xD;&#xA;	                                          long id, boolean checked) {&#xD;&#xA;	        // Here you can do something when items are selected/deselected,&#xD;&#xA;	        // such as update the title in the CAB&#xD;&#xA;	    	final int checkedCount = listView.getCheckedItemCount();&#xD;&#xA;            switch (checkedCount) {&#xD;&#xA;                case 0:&#xD;&#xA;                    mode.setSubtitle(null);&#xD;&#xA;                    break;&#xD;&#xA;                case 1:&#xD;&#xA;                    mode.setSubtitle(""One item selected"");&#xD;&#xA;                    break;&#xD;&#xA;                default:&#xD;&#xA;                    mode.setSubtitle("""" + checkedCount + "" items selected"");&#xD;&#xA;                    break;&#xD;&#xA;            }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onActionItemClicked(ActionMode mode, MenuItem item) {&#xD;&#xA;	        // Respond to clicks on the actions in the CAB&#xD;&#xA;	        switch (item.getItemId()) {&#xD;&#xA;	            case R.id.delete:&#xD;&#xA;	                //do your action command here&#xD;&#xA;	                mode.finish(); // Action picked, so close the CAB&#xD;&#xA;	                return true;&#xD;&#xA;	            default:&#xD;&#xA;	                return false;&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onCreateActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Inflate the menu for the CAB&#xD;&#xA;	        MenuInflater inflater = mode.getMenuInflater();&#xD;&#xA;	        inflater.inflate(R.menu.context_menu, menu);&#xD;&#xA;	        return true;&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onDestroyActionMode(ActionMode mode) {&#xD;&#xA;	        // Here you can make any necessary updates to the activity when&#xD;&#xA;	        // the CAB is removed. By default, selected items are deselected/unchecked.&#xD;&#xA;            isCABDestroyed = true; // mark readiness to switch back to SINGLE CHOICE after the CABis destroyed	&#xD;&#xA;	    	&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onPrepareActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Here you can perform updates to the CAB due to&#xD;&#xA;	        // an invalidate() request&#xD;&#xA;	        return false;&#xD;&#xA;	    }&#xD;&#xA;	};&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;3.Here is the swhitch back&#xD;&#xA;&#xD;&#xA;        @Override&#xD;&#xA;    	public void onListItemClick(ListView l, View v, int position, long id) {&#xD;&#xA;    		super.onListItemClick(l, v, position, id);	&#xD;&#xA;    		if(isCABDestroyed)&#xD;&#xA;    			listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);&#xD;&#xA;    		l.setItemChecked(position, true);&#xD;&#xA;            //do your action command  here&#xD;&#xA;    	}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;";;added 599 characters in body
24077987;10463373;1377003;5;ec2e9205-ccd5-4bde-8189-708b8759c15b;2012-05-05 17:41:34.0;"1.start in single mode choice and set all the listeners (this is done where you set the list adapter)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE); &#xD;&#xA;    listView.setOnItemLongClickListener(liListener);&#xD;&#xA;    listView.setMultiChoiceModeListener(mcListener);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;2.implement the interfaces to switch between choice modes. The TRICK to make it work is to switch back to single choice mode outside the implementation, meaning AFTER you destroy the action mode!! So just use a simple flag (defined as an instance variable ""isCABDestroyed"") to mark the CAB destruction in order to set the single choice mode on normal list item click call outside the action mode implementation.&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;&#xD;&#xA;    private OnItemLongClickListener liListener = new OnItemLongClickListener() {&#xD;&#xA;    		@Override&#xD;&#xA;    		public boolean onItemLongClick(AdapterView<?> parent, View view,&#xD;&#xA;    				int position, long id) {&#xD;&#xA;    			listView.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);&#xD;&#xA;                isCABDestroyed = false;				&#xD;&#xA;    			return true;&#xD;&#xA;    		}&#xD;&#xA;    	};&#xD;&#xA;	&#xD;&#xA;	private MultiChoiceModeListener mcListener = new MultiChoiceModeListener() {&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onItemCheckedStateChanged(ActionMode mode, int position,&#xD;&#xA;	                                          long id, boolean checked) {&#xD;&#xA;	        // Here you can do something when items are selected/deselected,&#xD;&#xA;	        // such as update the title in the CAB&#xD;&#xA;	    	final int checkedCount = listView.getCheckedItemCount();&#xD;&#xA;            switch (checkedCount) {&#xD;&#xA;                case 0:&#xD;&#xA;                    mode.setSubtitle(null);&#xD;&#xA;                    break;&#xD;&#xA;                case 1:&#xD;&#xA;                    mode.setSubtitle(""One item selected"");&#xD;&#xA;                    break;&#xD;&#xA;                default:&#xD;&#xA;                    mode.setSubtitle("""" + checkedCount + "" items selected"");&#xD;&#xA;                    break;&#xD;&#xA;            }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onActionItemClicked(ActionMode mode, MenuItem item) {&#xD;&#xA;	        // Respond to clicks on the actions in the CAB&#xD;&#xA;	        switch (item.getItemId()) {&#xD;&#xA;	            case R.id.delete:&#xD;&#xA;	                //do your action command here&#xD;&#xA;	                mode.finish(); // Action picked, so close the CAB&#xD;&#xA;	                return true;&#xD;&#xA;	            default:&#xD;&#xA;	                return false;&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onCreateActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Inflate the menu for the CAB&#xD;&#xA;	        MenuInflater inflater = mode.getMenuInflater();&#xD;&#xA;	        inflater.inflate(R.menu.context_menu, menu);&#xD;&#xA;	        return true;&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onDestroyActionMode(ActionMode mode) {&#xD;&#xA;	        // Here you can make any necessary updates to the activity when&#xD;&#xA;	        // the CAB is removed. By default, selected items are deselected/unchecked.&#xD;&#xA;            isCABDestroyed = true; // mark readiness to switch back to SINGLE CHOICE after the CABis destroyed	&#xD;&#xA;	    	&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onPrepareActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Here you can perform updates to the CAB due to&#xD;&#xA;	        // an invalidate() request&#xD;&#xA;	        return false;&#xD;&#xA;	    }&#xD;&#xA;	};&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;3.Here is the switch back&#xD;&#xA;&#xD;&#xA;        @Override&#xD;&#xA;    	public void onListItemClick(ListView l, View v, int position, long id) {&#xD;&#xA;    		super.onListItemClick(l, v, position, id);	&#xD;&#xA;    		if(isCABDestroyed)&#xD;&#xA;    			listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);&#xD;&#xA;    		l.setItemChecked(position, true);&#xD;&#xA;            //do your action command  here&#xD;&#xA;    	}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;";;deleted 1 characters in body
24078211;10463373;1377003;5;6cc79833-e451-4ec2-b57d-1f2ac3386cc6;2012-05-05 17:52:07.0;"1.start in single mode choice and set all the listeners (this is done where you set the list adapter)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE); &#xD;&#xA;    listView.setOnItemLongClickListener(liListener);&#xD;&#xA;    listView.setMultiChoiceModeListener(mcListener);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;2.implement the interfaces to switch between choice modes. The TRICK to make it work is to switch back to single choice mode outside the implementation, meaning AFTER you destroy the action mode!! So just use a simple flag (defined as an instance variable ""isCABDestroyed"") to mark the CAB destruction in order to set the single choice mode on normal list item click call outside the action mode implementation.&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;&#xD;&#xA;    private OnItemLongClickListener liListener = new OnItemLongClickListener() {&#xD;&#xA;    		@Override&#xD;&#xA;    		public boolean onItemLongClick(AdapterView<?> parent, View view,&#xD;&#xA;    				int position, long id) {                &#xD;&#xA;    			listView.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);&#xD;&#xA;                isCABDestroyed = false;	&#xD;&#xA;                //now stall for the next click ;)&#xD;&#xA;                listView.clearChoices();&#xD;&#xA;			    parentActivity.getActionBar().setSubtitle(""select items to delete"");			&#xD;&#xA;    			return true;&#xD;&#xA;    		}&#xD;&#xA;    	};&#xD;&#xA;	&#xD;&#xA;	private MultiChoiceModeListener mcListener = new MultiChoiceModeListener() {&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onItemCheckedStateChanged(ActionMode mode, int position,&#xD;&#xA;	                                          long id, boolean checked) {&#xD;&#xA;	        // Here you can do something when items are selected/deselected,&#xD;&#xA;	        // such as update the title in the CAB&#xD;&#xA;	    	final int checkedCount = listView.getCheckedItemCount();&#xD;&#xA;            switch (checkedCount) {&#xD;&#xA;                case 0:&#xD;&#xA;                    mode.setSubtitle(null);&#xD;&#xA;                    break;&#xD;&#xA;                case 1:&#xD;&#xA;                    mode.setSubtitle(""One item selected"");&#xD;&#xA;                    break;&#xD;&#xA;                default:&#xD;&#xA;                    mode.setSubtitle("""" + checkedCount + "" items selected"");&#xD;&#xA;                    break;&#xD;&#xA;            }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onActionItemClicked(ActionMode mode, MenuItem item) {&#xD;&#xA;	        // Respond to clicks on the actions in the CAB&#xD;&#xA;	        switch (item.getItemId()) {&#xD;&#xA;	            case R.id.delete:&#xD;&#xA;	                //do your action command here&#xD;&#xA;	                mode.finish(); // Action picked, so close the CAB&#xD;&#xA;	                return true;&#xD;&#xA;	            default:&#xD;&#xA;	                return false;&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onCreateActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Inflate the menu for the CAB&#xD;&#xA;	        MenuInflater inflater = mode.getMenuInflater();&#xD;&#xA;	        inflater.inflate(R.menu.context_menu, menu);&#xD;&#xA;	        return true;&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onDestroyActionMode(ActionMode mode) {&#xD;&#xA;	        // Here you can make any necessary updates to the activity when&#xD;&#xA;	        // the CAB is removed. By default, selected items are deselected/unchecked.&#xD;&#xA;            isCABDestroyed = true; // mark readiness to switch back to SINGLE CHOICE after the CABis destroyed	&#xD;&#xA;	    	&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onPrepareActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Here you can perform updates to the CAB due to&#xD;&#xA;	        // an invalidate() request&#xD;&#xA;	        return false;&#xD;&#xA;	    }&#xD;&#xA;	};&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;3.Here is the switch back&#xD;&#xA;&#xD;&#xA;        @Override&#xD;&#xA;    	public void onListItemClick(ListView l, View v, int position, long id) {&#xD;&#xA;    		super.onListItemClick(l, v, position, id);	&#xD;&#xA;    		if(isCABDestroyed)&#xD;&#xA;    			listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);&#xD;&#xA;    		l.setItemChecked(position, true);&#xD;&#xA;            //do your action command  here&#xD;&#xA;    	}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;";;added 186 characters in body
24078325;10463373;1377003;5;03e2dde0-a7c2-46e5-99b1-565160fea3ac;2012-05-05 17:57:21.0;"1.start in single mode choice and set all the listeners (this is done where you set the list adapter)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE); &#xD;&#xA;    listView.setOnItemLongClickListener(liListener);&#xD;&#xA;    listView.setMultiChoiceModeListener(mcListener);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;2.implement the interfaces to switch between choice modes. The TRICK to make it work is to switch back to single choice mode outside the implementation, meaning AFTER you destroy the action mode!! So just use a simple flag (defined as an instance variable ""isCABDestroyed"") to mark the CAB destruction in order to set the single choice mode on normal list item click call outside the action mode implementation.&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;&#xD;&#xA;    private OnItemLongClickListener liListener = new OnItemLongClickListener() {&#xD;&#xA;    		@Override&#xD;&#xA;    		public boolean onItemLongClick(AdapterView<?> parent, View view,&#xD;&#xA;    				int position, long id) {                &#xD;&#xA;    			listView.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);&#xD;&#xA;                isCABDestroyed = false;	&#xD;&#xA;                //now stall for the next click ;)&#xD;&#xA;                listView.clearChoices();&#xD;&#xA;		 	    listView.requestLayout();&#xD;&#xA;    			return true;&#xD;&#xA;    		}&#xD;&#xA;    	};&#xD;&#xA;	&#xD;&#xA;	private MultiChoiceModeListener mcListener = new MultiChoiceModeListener() {&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onItemCheckedStateChanged(ActionMode mode, int position,&#xD;&#xA;	                                          long id, boolean checked) {&#xD;&#xA;	        // Here you can do something when items are selected/deselected,&#xD;&#xA;	        // such as update the title in the CAB&#xD;&#xA;	    	final int checkedCount = listView.getCheckedItemCount();&#xD;&#xA;            switch (checkedCount) {&#xD;&#xA;                case 0:&#xD;&#xA;                    mode.setSubtitle(null);&#xD;&#xA;                    break;&#xD;&#xA;                case 1:&#xD;&#xA;                    mode.setSubtitle(""One item selected"");&#xD;&#xA;                    break;&#xD;&#xA;                default:&#xD;&#xA;                    mode.setSubtitle("""" + checkedCount + "" items selected"");&#xD;&#xA;                    break;&#xD;&#xA;            }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onActionItemClicked(ActionMode mode, MenuItem item) {&#xD;&#xA;	        // Respond to clicks on the actions in the CAB&#xD;&#xA;	        switch (item.getItemId()) {&#xD;&#xA;	            case R.id.delete:&#xD;&#xA;	                //do your action command here&#xD;&#xA;	                mode.finish(); // Action picked, so close the CAB&#xD;&#xA;	                return true;&#xD;&#xA;	            default:&#xD;&#xA;	                return false;&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onCreateActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Inflate the menu for the CAB&#xD;&#xA;	        MenuInflater inflater = mode.getMenuInflater();&#xD;&#xA;	        inflater.inflate(R.menu.context_menu, menu);&#xD;&#xA;	        return true;&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onDestroyActionMode(ActionMode mode) {&#xD;&#xA;	        // Here you can make any necessary updates to the activity when&#xD;&#xA;	        // the CAB is removed. By default, selected items are deselected/unchecked.&#xD;&#xA;            isCABDestroyed = true; // mark readiness to switch back to SINGLE CHOICE after the CABis destroyed	&#xD;&#xA;	    	&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onPrepareActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Here you can perform updates to the CAB due to&#xD;&#xA;	        // an invalidate() request&#xD;&#xA;	        return false;&#xD;&#xA;	    }&#xD;&#xA;	};&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;3.Here is the switch back&#xD;&#xA;&#xD;&#xA;        @Override&#xD;&#xA;    	public void onListItemClick(ListView l, View v, int position, long id) {&#xD;&#xA;    		super.onListItemClick(l, v, position, id);	&#xD;&#xA;    		if(isCABDestroyed)&#xD;&#xA;    			listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);&#xD;&#xA;    		l.setItemChecked(position, true);&#xD;&#xA;            //do your action command  here&#xD;&#xA;    	}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;";;added 186 characters in body
24078400;10463373;1377003;5;1dfc8a02-9e41-489a-9a07-b091c0cd7fbb;2012-05-05 18:02:31.0;"1.start in single mode choice and set all the listeners (this is done where you set the list adapter)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE); &#xD;&#xA;    listView.setOnItemLongClickListener(liListener);&#xD;&#xA;    listView.setMultiChoiceModeListener(mcListener);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;2.implement the interfaces to switch between choice modes. The TRICK to make it work is to switch back to single choice mode outside the implementation, meaning AFTER you destroy the action mode!! So just use a simple flag (defined as an instance variable ""isCABDestroyed"") to mark the CAB destruction in order to set the single choice mode on normal list item click call outside the action mode implementation.&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;&#xD;&#xA;    private OnItemLongClickListener liListener = new OnItemLongClickListener() {&#xD;&#xA;    		@Override&#xD;&#xA;    		public boolean onItemLongClick(AdapterView<?> parent, View view,&#xD;&#xA;    				int position, long id) {                &#xD;&#xA;    			listView.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);&#xD;&#xA;                isCABDestroyed = false;	&#xD;&#xA;                //now stall for the next click ;)&#xD;&#xA;                Toast.makeText(parentActivity.getApplicationContext(), ""Please select now your items to delete."", Toast.LENGTH_SHORT);&#xD;&#xA;                listView.clearChoices();&#xD;&#xA;		 	    listView.requestLayout();&#xD;&#xA;    			return true;&#xD;&#xA;    		}&#xD;&#xA;    	};&#xD;&#xA;	&#xD;&#xA;	private MultiChoiceModeListener mcListener = new MultiChoiceModeListener() {&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onItemCheckedStateChanged(ActionMode mode, int position,&#xD;&#xA;	                                          long id, boolean checked) {&#xD;&#xA;	        // Here you can do something when items are selected/deselected,&#xD;&#xA;	        // such as update the title in the CAB&#xD;&#xA;	    	final int checkedCount = listView.getCheckedItemCount();&#xD;&#xA;            switch (checkedCount) {&#xD;&#xA;                case 0:&#xD;&#xA;                    mode.setSubtitle(null);&#xD;&#xA;                    break;&#xD;&#xA;                case 1:&#xD;&#xA;                    mode.setSubtitle(""One item selected"");&#xD;&#xA;                    break;&#xD;&#xA;                default:&#xD;&#xA;                    mode.setSubtitle("""" + checkedCount + "" items selected"");&#xD;&#xA;                    break;&#xD;&#xA;            }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onActionItemClicked(ActionMode mode, MenuItem item) {&#xD;&#xA;	        // Respond to clicks on the actions in the CAB&#xD;&#xA;	        switch (item.getItemId()) {&#xD;&#xA;	            case R.id.delete:&#xD;&#xA;	                //do your action command here&#xD;&#xA;	                mode.finish(); // Action picked, so close the CAB&#xD;&#xA;	                return true;&#xD;&#xA;	            default:&#xD;&#xA;	                return false;&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onCreateActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Inflate the menu for the CAB&#xD;&#xA;	        MenuInflater inflater = mode.getMenuInflater();&#xD;&#xA;	        inflater.inflate(R.menu.context_menu, menu);&#xD;&#xA;	        return true;&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onDestroyActionMode(ActionMode mode) {&#xD;&#xA;	        // Here you can make any necessary updates to the activity when&#xD;&#xA;	        // the CAB is removed. By default, selected items are deselected/unchecked.&#xD;&#xA;            isCABDestroyed = true; // mark readiness to switch back to SINGLE CHOICE after the CABis destroyed	&#xD;&#xA;	    	&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onPrepareActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Here you can perform updates to the CAB due to&#xD;&#xA;	        // an invalidate() request&#xD;&#xA;	        return false;&#xD;&#xA;	    }&#xD;&#xA;	};&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;3.Here is the switch back&#xD;&#xA;&#xD;&#xA;        @Override&#xD;&#xA;    	public void onListItemClick(ListView l, View v, int position, long id) {&#xD;&#xA;    		super.onListItemClick(l, v, position, id);	&#xD;&#xA;    		if(isCABDestroyed)&#xD;&#xA;    			listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);&#xD;&#xA;    		l.setItemChecked(position, true);&#xD;&#xA;            //do your action command  here&#xD;&#xA;    	}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;";;added 186 characters in body
24078583;10463373;1377003;5;c299ea7f-1e1c-4a4c-9bd3-766a9578d448;2012-05-05 18:10:43.0;"1.start in single mode choice and set all the listeners (this is done where you set the list adapter)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE); &#xD;&#xA;    listView.setOnItemLongClickListener(liListener);&#xD;&#xA;    listView.setMultiChoiceModeListener(mcListener);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;2.implement the interfaces to switch between choice modes. The TRICK to make it work is to switch back to single choice mode outside the implementation, meaning AFTER you destroy the action mode!! So just use a simple flag (defined as an instance variable ""isCABDestroyed"") to mark the CAB destruction in order to set the single choice mode on normal list item click call outside the action mode implementation.&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;&#xD;&#xA;    private OnItemLongClickListener liListener = new OnItemLongClickListener() {&#xD;&#xA;    		@Override&#xD;&#xA;    		public boolean onItemLongClick(AdapterView<?> parent, View view,&#xD;&#xA;    				int position, long id) {                &#xD;&#xA;    			listView.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);&#xD;&#xA;                isCABDestroyed = false;	&#xD;&#xA;                //now stall for the next click ;)&#xD;&#xA;                Toast.makeText(parentActivity, ""Please select now your items to delete."", Toast.LENGTH_SHORT).show();&#xD;&#xA;                listView.clearChoices();&#xD;&#xA;		 	    listView.requestLayout();&#xD;&#xA;    			return true;&#xD;&#xA;    		}&#xD;&#xA;    	};&#xD;&#xA;	&#xD;&#xA;	private MultiChoiceModeListener mcListener = new MultiChoiceModeListener() {&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onItemCheckedStateChanged(ActionMode mode, int position,&#xD;&#xA;	                                          long id, boolean checked) {&#xD;&#xA;	        // Here you can do something when items are selected/deselected,&#xD;&#xA;	        // such as update the title in the CAB&#xD;&#xA;	    	final int checkedCount = listView.getCheckedItemCount();&#xD;&#xA;            switch (checkedCount) {&#xD;&#xA;                case 0:&#xD;&#xA;                    mode.setSubtitle(null);&#xD;&#xA;                    break;&#xD;&#xA;                case 1:&#xD;&#xA;                    mode.setSubtitle(""One item selected"");&#xD;&#xA;                    break;&#xD;&#xA;                default:&#xD;&#xA;                    mode.setSubtitle("""" + checkedCount + "" items selected"");&#xD;&#xA;                    break;&#xD;&#xA;            }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onActionItemClicked(ActionMode mode, MenuItem item) {&#xD;&#xA;	        // Respond to clicks on the actions in the CAB&#xD;&#xA;	        switch (item.getItemId()) {&#xD;&#xA;	            case R.id.delete:&#xD;&#xA;	                //do your action command here&#xD;&#xA;	                mode.finish(); // Action picked, so close the CAB&#xD;&#xA;	                return true;&#xD;&#xA;	            default:&#xD;&#xA;	                return false;&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onCreateActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Inflate the menu for the CAB&#xD;&#xA;	        MenuInflater inflater = mode.getMenuInflater();&#xD;&#xA;	        inflater.inflate(R.menu.context_menu, menu);&#xD;&#xA;	        return true;&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onDestroyActionMode(ActionMode mode) {&#xD;&#xA;	        // Here you can make any necessary updates to the activity when&#xD;&#xA;	        // the CAB is removed. By default, selected items are deselected/unchecked.&#xD;&#xA;            isCABDestroyed = true; // mark readiness to switch back to SINGLE CHOICE after the CABis destroyed	&#xD;&#xA;	    	&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onPrepareActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Here you can perform updates to the CAB due to&#xD;&#xA;	        // an invalidate() request&#xD;&#xA;	        return false;&#xD;&#xA;	    }&#xD;&#xA;	};&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;3.Here is the switch back&#xD;&#xA;&#xD;&#xA;        @Override&#xD;&#xA;    	public void onListItemClick(ListView l, View v, int position, long id) {&#xD;&#xA;    		super.onListItemClick(l, v, position, id);	&#xD;&#xA;    		if(isCABDestroyed)&#xD;&#xA;    			listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);&#xD;&#xA;    		l.setItemChecked(position, true);&#xD;&#xA;            //do your action command  here&#xD;&#xA;    	}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;";;deleted 17 characters in body
24092112;10463373;1377003;5;1aa63f6d-3940-45a6-8b43-cd459258d086;2012-05-06 09:10:33.0;"1.start in single mode choice and set all the listeners (this is done where you set the list adapter)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE); &#xD;&#xA;    listView.setOnItemLongClickListener(liListener);&#xD;&#xA;    listView.setMultiChoiceModeListener(mcListener);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;2.implement the interfaces to switch between choice modes. The TRICK to make it work is to switch back to single choice mode outside the implementation, meaning AFTER you destroy the action mode!! So just use a simple flag to mark the CAB destruction. Another TRICK is to return false onItemLongClick so that the the choice mode have time to get into effect.&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;&#xD;&#xA;    private OnItemLongClickListener liListener = new OnItemLongClickListener() {&#xD;&#xA;    		@Override&#xD;&#xA;    		public boolean onItemLongClick(AdapterView<?> parent, View view,&#xD;&#xA;    				int position, long id) {                &#xD;&#xA;    			listView.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);&#xD;&#xA;                isCABDestroyed = false;	                &#xD;&#xA;    			return false; // so this action does not consumes the event!!!&#xD;&#xA;    		}&#xD;&#xA;    	};&#xD;&#xA;	&#xD;&#xA;	private MultiChoiceModeListener mcListener = new MultiChoiceModeListener() {&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onItemCheckedStateChanged(ActionMode mode, int position,&#xD;&#xA;	                                          long id, boolean checked) {&#xD;&#xA;	        // Here you can do something when items are selected/deselected,&#xD;&#xA;	        // such as update the title in the CAB&#xD;&#xA;	    	final int checkedCount = listView.getCheckedItemCount();&#xD;&#xA;            switch (checkedCount) {&#xD;&#xA;                case 0:&#xD;&#xA;                    mode.setSubtitle(null);&#xD;&#xA;                    break;&#xD;&#xA;                case 1:&#xD;&#xA;                    mode.setSubtitle(""One item selected"");&#xD;&#xA;                    break;&#xD;&#xA;                default:&#xD;&#xA;                    mode.setSubtitle("""" + checkedCount + "" items selected"");&#xD;&#xA;                    break;&#xD;&#xA;            }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onActionItemClicked(ActionMode mode, MenuItem item) {&#xD;&#xA;	        // Respond to clicks on the actions in the CAB&#xD;&#xA;	        switch (item.getItemId()) {&#xD;&#xA;	            case R.id.delete:&#xD;&#xA;	                //do your action command here&#xD;&#xA;	                mode.finish(); // Action picked, so close the CAB&#xD;&#xA;	                return true;&#xD;&#xA;	            default:&#xD;&#xA;	                return false;&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onCreateActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Inflate the menu for the CAB&#xD;&#xA;	        MenuInflater inflater = mode.getMenuInflater();&#xD;&#xA;	        inflater.inflate(R.menu.context_menu, menu);&#xD;&#xA;	        return true;&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onDestroyActionMode(ActionMode mode) {&#xD;&#xA;	        // Here you can make any necessary updates to the activity when&#xD;&#xA;	        // the CAB is removed. By default, selected items are deselected/unchecked.&#xD;&#xA;            isCABDestroyed = true; // mark readiness to switch back to SINGLE CHOICE after the CABis destroyed	&#xD;&#xA;	    	&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onPrepareActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        // Here you can perform updates to the CAB due to&#xD;&#xA;	        // an invalidate() request&#xD;&#xA;	        return false;&#xD;&#xA;	    }&#xD;&#xA;	};&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;3.Here is the switch back&#xD;&#xA;&#xD;&#xA;        @Override&#xD;&#xA;    	public void onListItemClick(ListView l, View v, int position, long id) {&#xD;&#xA;    		super.onListItemClick(l, v, position, id);	&#xD;&#xA;    		if(isCABDestroyed)&#xD;&#xA;    			listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);&#xD;&#xA;    		l.setItemChecked(position, true);&#xD;&#xA;            //do your action command  here&#xD;&#xA;    	}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;";;deleted 183 characters in body
24092201;10463373;1377003;5;b4b2db94-007d-4848-bc6c-20264841c4e7;2012-05-06 09:16:19.0;"It really seemed awkard this choice mode switch since there is no clean and simple solution I could google. HFM (have faith man) and KISS (keep it simple stupid) helped ;)&#xD;&#xA;&#xD;&#xA;1.start in single mode choice and set all the listeners (this is done where you set the list adapter)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE); &#xD;&#xA;    listView.setOnItemLongClickListener(liListener);&#xD;&#xA;    listView.setMultiChoiceModeListener(mcListener);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;2.implement the interfaces to switch between choice modes. The TRICK to make it work is to switch back to single choice mode outside the implementation, meaning AFTER you destroy the action mode!! So just use a simple flag to mark the CAB destruction. Another TRICK is to return false onItemLongClick so that the the choice mode have time to get into effect.&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;&#xD;&#xA;    private OnItemLongClickListener liListener = new OnItemLongClickListener() {&#xD;&#xA;    		@Override&#xD;&#xA;    		public boolean onItemLongClick(AdapterView<?> parent, View view,&#xD;&#xA;    				int position, long id) {                &#xD;&#xA;    			listView.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);&#xD;&#xA;                isCABDestroyed = false;	                &#xD;&#xA;    			return false; // so this action does not consume the event!!!&#xD;&#xA;    		}&#xD;&#xA;    	};&#xD;&#xA;	&#xD;&#xA;	private MultiChoiceModeListener mcListener = new MultiChoiceModeListener() {&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onItemCheckedStateChanged(ActionMode mode, int position,&#xD;&#xA;	                                          long id, boolean checked) {&#xD;&#xA;	    	final int checkedCount = listView.getCheckedItemCount();&#xD;&#xA;            switch (checkedCount) {&#xD;&#xA;                case 0:&#xD;&#xA;                    mode.setSubtitle(null);&#xD;&#xA;                    break;&#xD;&#xA;                case 1:&#xD;&#xA;                    mode.setSubtitle(""One item selected"");&#xD;&#xA;                    break;&#xD;&#xA;                default:&#xD;&#xA;                    mode.setSubtitle("""" + checkedCount + "" items selected"");&#xD;&#xA;                    break;&#xD;&#xA;            }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onActionItemClicked(ActionMode mode, MenuItem item) {&#xD;&#xA;	        switch (item.getItemId()) {&#xD;&#xA;	            case R.id.delete:&#xD;&#xA;	                //do your action command here&#xD;&#xA;	                mode.finish();&#xD;&#xA;	                return true;&#xD;&#xA;	            default:&#xD;&#xA;	                return false;&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onCreateActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        MenuInflater inflater = mode.getMenuInflater();&#xD;&#xA;	        inflater.inflate(R.menu.context_menu, menu);&#xD;&#xA;	        return true;&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public void onDestroyActionMode(ActionMode mode) {&#xD;&#xA;            isCABDestroyed = true; // mark readiness to switch back to SINGLE CHOICE after the CABis destroyed	&#xD;&#xA;	    	&#xD;&#xA;	    }&#xD;&#xA;&#xD;&#xA;	    @Override&#xD;&#xA;	    public boolean onPrepareActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;	        return false;&#xD;&#xA;	    }&#xD;&#xA;	};&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;3.Here is the switch back&#xD;&#xA;&#xD;&#xA;        @Override&#xD;&#xA;    	public void onListItemClick(ListView l, View v, int position, long id) {&#xD;&#xA;    		super.onListItemClick(l, v, position, id);	&#xD;&#xA;    		if(isCABDestroyed) {&#xD;&#xA;    			listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);&#xD;&#xA;                //do your action command  here&#xD;&#xA;            }&#xD;&#xA;    		l.setItemChecked(position, true);&#xD;&#xA;            &#xD;&#xA;    	}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;";;deleted 183 characters in body
