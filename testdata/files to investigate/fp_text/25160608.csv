Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
70894571;25160608;2879919;2;8548454d-9db6-45e8-aa0e-674e28e5553e;2014-08-06 12:35:49.0;"I have done this with vb code but would like it returned as a view from a if possible.&#xD;&#xA;&#xD;&#xA;The main table, has table_id, table_value1, table_value2, table_value3 for example&#xD;&#xA;There is another table called history with references to table_id, history_id, table_ref, new_value, old_value&#xD;&#xA;&#xD;&#xA;Example data from maintable&#xD;&#xA;table_id  table_value1  table_value2  table_value3&#xD;&#xA;1         test          dummydata     moredummydata&#xD;&#xA;&#xD;&#xA;history table:&#xD;&#xA;history_id  table_id  table_ref      new_value      old_Value&#xD;&#xA;3           1         table_value1   test           new&#xD;&#xA;2           1         table_value3   moredummydata  dummy &#xD;&#xA;1           1         table_value3   dummy&#xD;&#xA;&#xD;&#xA;What i want to happen, if i provide table_id and history_id to function, it obtains the row 1 from maintable and then works through the history table descending to the history_id provided.&#xD;&#xA;&#xD;&#xA;For example if table_id = 1 and history_id = 2 then it should return&#xD;&#xA;table_id  table_value1  table_value2  table_value3&#xD;&#xA;1         new           dummydata     moredummydata&#xD;&#xA;&#xD;&#xA;Is this possible in sql?&#xD;&#xA;&#xD;&#xA;The main idea is that i have a table with 20-30 fields, that i want to record each time there is a change to a field. Or is there an easier way i haven't thought of?  &#xD;&#xA;";;
70894930;25160608;567435;5;6f54ad81-a7d5-4be9-841e-4780236d5c65;2014-08-06 12:40:57.0;"I have done this with vb code but would like it returned as a view from a if possible.&#xD;&#xA;&#xD;&#xA;The `main table`, has `table_id, table_value1, table_value2, table_value3` for example&#xD;&#xA;There is another table called `history` with references to `table_id, history_id, table_ref, new_value, old_value`&#xD;&#xA;&#xD;&#xA;Example data from `maintable`&#xD;&#xA;&#xD;&#xA;    table_id  table_value1  table_value2  table_value3&#xD;&#xA;    1         test          dummydata     moredummydata&#xD;&#xA;&#xD;&#xA;`history table`:&#xD;&#xA;&#xD;&#xA;    history_id  table_id  table_ref      new_value      old_Value&#xD;&#xA;    3           1         table_value1   test           new&#xD;&#xA;    2           1         table_value3   moredummydata  dummy &#xD;&#xA;    1           1         table_value3   dummy&#xD;&#xA;&#xD;&#xA;What i want to happen, if i provide table_id and history_id to function, it obtains the row 1 from maintable and then works through the history table descending to the history_id provided.&#xD;&#xA;&#xD;&#xA;For example if `table_id = 1 and history_id = 2` then it should return&#xD;&#xA;&#xD;&#xA;    table_id  table_value1  table_value2  table_value3&#xD;&#xA;    1         new           dummydata     moredummydata&#xD;&#xA;&#xD;&#xA;Is this possible in sql?&#xD;&#xA;&#xD;&#xA;The main idea is that i have a table with 20-30 fields, that i want to record each time there is a change to a field. Or is there an easier way i haven't thought of?  &#xD;&#xA;";;added 52 characters in body
70902316;25160608;2879919;5;55774042-07f9-42e7-87ed-fdb98ca9fdaf;2014-08-06 14:10:17.0;"I have done this with vb code but would like it returned as a view from a if possible.&#xD;&#xA;&#xD;&#xA;The `main table`, has `table_id, table_value1, table_value2, table_value3` for example&#xD;&#xA;There is another table called `history` with references to `table_id, history_id, table_ref, new_value, old_value`&#xD;&#xA;&#xD;&#xA;Example data from `maintable`&#xD;&#xA;&#xD;&#xA;    table_id  table_value1  table_value2  table_value3&#xD;&#xA;    1         test          dummydata     moredummydata&#xD;&#xA;&#xD;&#xA;`history table`:&#xD;&#xA;&#xD;&#xA;    history_id  table_id  table_ref      new_value      old_Value&#xD;&#xA;    3           1         table_value1   test           new&#xD;&#xA;    2           1         table_value3   moredummydata  dummy &#xD;&#xA;    1           1         table_value3   dummy&#xD;&#xA;&#xD;&#xA;What i want to happen, if i provide table_id and history_id to function, it obtains the row 1 from maintable and then works through the history table descending to the history_id provided.&#xD;&#xA;&#xD;&#xA;For example if `table_id = 1 and history_id = 2` then it should return&#xD;&#xA;&#xD;&#xA;    table_id  table_value1  table_value2  table_value3&#xD;&#xA;    1         new           dummydata     moredummydata&#xD;&#xA;&#xD;&#xA;Is this possible in sql?&#xD;&#xA;&#xD;&#xA;The main idea is that i have a table with 20-30 fields, that i want to record each time there is a change to a field. Or is there an easier way i haven't thought of?  &#xD;&#xA;&#xD;&#xA;sql fiddle showing 2 databases <http://sqlfiddle.com/#!6/d5a71/3>&#xD;&#xA;";;provided link for sqlfiddle sample
70963973;25160608;2879919;5;b22bf9fa-6c43-4c44-b75b-cdf719822596;2014-08-07 09:37:31.0;"I have done this with vb code but would like it returned as a view from a if possible.&#xD;&#xA;&#xD;&#xA;The `main table`, has `table_id, table_value1, table_value2, table_value3` for example&#xD;&#xA;There is another table called `history` with references to `table_id, history_id, table_ref, new_value, old_value`&#xD;&#xA;&#xD;&#xA;Example data from `maintable`&#xD;&#xA;&#xD;&#xA;    table_id  table_value1  table_value2  table_value3&#xD;&#xA;    1         test          dummydata     moredummydata&#xD;&#xA;&#xD;&#xA;`history table`:&#xD;&#xA;&#xD;&#xA;    history_id  table_id  table_ref      new_value      old_Value&#xD;&#xA;    3           1         table_value1   test           new&#xD;&#xA;    2           1         table_value3   moredummydata  dummy &#xD;&#xA;    1           1         table_value3   dummy&#xD;&#xA;&#xD;&#xA;What i want to happen, if i provide table_id and history_id to function, it obtains the row 1 from maintable and then works through the history table descending to the history_id provided.&#xD;&#xA;&#xD;&#xA;For example if `table_id = 1 and history_id = 2` then it should return&#xD;&#xA;&#xD;&#xA;    table_id  table_value1  table_value2  table_value3&#xD;&#xA;    1         new           dummydata     moredummydata&#xD;&#xA;&#xD;&#xA;Is this possible in sql?&#xD;&#xA;&#xD;&#xA;The main idea is that i have a table with 20-30 fields, that i want to record each time there is a change to a field. Or is there an easier way i haven't thought of?  &#xD;&#xA;&#xD;&#xA;sql fiddle showing 2 databases <http://sqlfiddle.com/#!6/d5a71/3>&#xD;&#xA;&#xD;&#xA;    CREATE TABLE main&#xD;&#xA;    (&#xD;&#xA;    table_id int NOT NULL IDENTITY PRIMARY KEY,          &#xD;&#xA;    table_value1 varchar(50),&#xD;&#xA;    table_value2 varchar(50),&#xD;&#xA;    table_value3 varchar(50)&#xD;&#xA;    );&#xD;&#xA;    INSERT INTO main VALUES ('test','dummydata','moredummydata');&#xD;&#xA;    CREATE TABLE history&#xD;&#xA;    (&#xD;&#xA;    history_id int NOT NULL IDENTITY PRIMARY KEY,&#xD;&#xA;    table_id int,&#xD;&#xA;    table_ref varchar(50),&#xD;&#xA;    new_value varchar(50),&#xD;&#xA;    old_Value varchar(50)&#xD;&#xA;    );&#xD;&#xA;&#xD;&#xA;    INSERT INTO history VALUES (1,'table_value3','dummy','');&#xD;&#xA;    INSERT INTO history VALUES (1,'table_value3','moredummydata', 'dummy');&#xD;&#xA;    INSERT INTO history VALUES (1,'table_value1','test','new');&#xD;&#xA;&#xD;&#xA;";;provided schema
70965211;25160608;2879919;5;f0877c04-a48d-48cc-9d6a-b4dabd084621;2014-08-07 09:53:51.0;"I have done this with vb code but would like it returned as a view from a if possible.&#xD;&#xA;&#xD;&#xA;The `main table`, has `table_id, table_value1, table_value2, table_value3` for example&#xD;&#xA;There is another table called `history` with references to `table_id, history_id, table_ref, new_value, old_value`&#xD;&#xA;&#xD;&#xA;Example data from `maintable`&#xD;&#xA;&#xD;&#xA;    table_id  table_value1  table_value2  table_value3&#xD;&#xA;    1         test          dummydata     moredummydata&#xD;&#xA;&#xD;&#xA;`history table`:&#xD;&#xA;&#xD;&#xA;    history_id  table_id  table_ref      new_value      old_Value&#xD;&#xA;    3           1         table_value1   test           new&#xD;&#xA;    2           1         table_value3   moredummydata  dummy &#xD;&#xA;    1           1         table_value3   dummy&#xD;&#xA;&#xD;&#xA;What i want to happen, if i provide table_id and history_id to function, it obtains the row from maintable and then works through the history table descending to the history_id provided.&#xD;&#xA;&#xD;&#xA;For example if `table_id = 1 and history_id = 2` then it should return&#xD;&#xA;&#xD;&#xA;    table_id  table_value1  table_value2  table_value3&#xD;&#xA;    1         new           dummydata     moredummydata&#xD;&#xA;&#xD;&#xA;Working with a copy of the `maintable` row, i want it to apply the following:&#xD;&#xA;&#xD;&#xA;Starting at the highest `history_id`, i want it to loop through to the `history_id` provided:&#xD;&#xA;&#xD;&#xA;1. At `history_id` = 3, it will apply `old_value` to the field specified in `table_ref`.  In this case it will update `table_value1` with the value 'new'.&#xD;&#xA;&#xD;&#xA;2. Then it will move down to `history_id` = 2 and apply new_value for the field specified in table_ref.&#xD;&#xA;&#xD;&#xA;So my question is, best way of looping from history table desending and updating temporary maintable row with field specified in table_ref with the old_value then the new_value for the last entry.&#xD;&#xA;&#xD;&#xA;The main idea is that i have a table with 20-30 fields, that i want to record each time there is a change to a field. Or is there an easier way i haven't thought of?  &#xD;&#xA;&#xD;&#xA;sql fiddle showing 2 databases <http://sqlfiddle.com/#!6/d5a71/3>&#xD;&#xA;&#xD;&#xA;    CREATE TABLE main&#xD;&#xA;    (&#xD;&#xA;    table_id int NOT NULL IDENTITY PRIMARY KEY,          &#xD;&#xA;    table_value1 varchar(50),&#xD;&#xA;    table_value2 varchar(50),&#xD;&#xA;    table_value3 varchar(50)&#xD;&#xA;    );&#xD;&#xA;    INSERT INTO main VALUES ('test','dummydata','moredummydata');&#xD;&#xA;    CREATE TABLE history&#xD;&#xA;    (&#xD;&#xA;    history_id int NOT NULL IDENTITY PRIMARY KEY,&#xD;&#xA;    table_id int,&#xD;&#xA;    table_ref varchar(50),&#xD;&#xA;    new_value varchar(50),&#xD;&#xA;    old_Value varchar(50)&#xD;&#xA;    );&#xD;&#xA;&#xD;&#xA;    INSERT INTO history VALUES (1,'table_value3','dummy','');&#xD;&#xA;    INSERT INTO history VALUES (1,'table_value3','moredummydata', 'dummy');&#xD;&#xA;    INSERT INTO history VALUES (1,'table_value1','test','new');&#xD;&#xA;&#xD;&#xA;";;added more detail to required process
70997536;25160608;2879919;5;31969f2f-ca79-4a17-b603-3a96abc3334c;2014-08-07 16:57:42.0;"I have done this with vb code but would like it returned as a view from a if possible.&#xD;&#xA;&#xD;&#xA;The `main table`, has `table_id, table_value1, table_value2, table_value3` for example&#xD;&#xA;There is another table called `history` with references to `table_id, history_id, history_index, table_ref, new_value, old_value`&#xD;&#xA;&#xD;&#xA;Example data from `maintable`&#xD;&#xA;&#xD;&#xA;    table_id  table_value1  table_value2  table_value3&#xD;&#xA;    1         fred          dummydata     moredummydata&#xD;&#xA;&#xD;&#xA;`history table`:&#xD;&#xA;&#xD;&#xA;    history_id  history_index  table_id  table_ref      new_value      old_Value&#xD;&#xA;    5           4              1         table_value1   fred           test&#xD;&#xA;    4           3              1         table_value1   test           new&#xD;&#xA;    3           3              1         table_value3   moredummydata  dummy &#xD;&#xA;    2           2              1         table_value3   dummy&#xD;&#xA;    1           1              1         table_value1   new               &#xD;&#xA;&#xD;&#xA;What i want to happen, if i provide `table_id` to function, it obtains the row from `main` table and then works through the history table descending to the `history_index` provided.&#xD;&#xA;&#xD;&#xA;For example if `table_id = 1` it should return a table with&#xD;&#xA;&#xD;&#xA;    table_id  history_index table_value1  table_value2  table_value3&#xD;&#xA;    1         4             fred          dummydata     moredummydata&#xD;&#xA;    1         3             test          dummydata     moredummydata&#xD;&#xA;    1         2             new           dummydata     dummy&#xD;&#xA;    1         1             new           dummydata     &#xD;&#xA;&#xD;&#xA;Working with a copy of the `maintable` row, i want it to apply the following:&#xD;&#xA;&#xD;&#xA;Starting at the highest `history_id`, i want it to loop through to the `history_index` provided:&#xD;&#xA;&#xD;&#xA;1. At `history_id` = 5, it will apply `old_value` to the field specified in `table_ref`.  In this case it will update `table_value1` with the value 'test'.&#xD;&#xA;&#xD;&#xA;2. Then it will move down to `history_id` = 4 and apply new_value for the field specified in table_ref.&#xD;&#xA;&#xD;&#xA;So my question is, best way of looping from history table desending and updating temporary maintable row with field specified in table_ref with the old_value then the new_value for the last entry.&#xD;&#xA;&#xD;&#xA;The main idea is that i have a table with 20-30 fields, that i want to record each time there is a change to a field. Or is there an easier way i haven't thought of?  &#xD;&#xA;&#xD;&#xA;sql fiddle showing 2 databases <http://sqlfiddle.com/#!6/d5a71/3>&#xD;&#xA;&#xD;&#xA;    CREATE TABLE main&#xD;&#xA;    (&#xD;&#xA;    table_id int NOT NULL IDENTITY PRIMARY KEY,          &#xD;&#xA;    table_value1 varchar(50),&#xD;&#xA;    table_value2 varchar(50),&#xD;&#xA;    table_value3 varchar(50)&#xD;&#xA;    );&#xD;&#xA;    INSERT INTO main VALUES ('test','dummydata','moredummydata');&#xD;&#xA;    CREATE TABLE history&#xD;&#xA;    (&#xD;&#xA;    history_id int NOT NULL IDENTITY PRIMARY KEY,&#xD;&#xA;    history_index int,&#xD;&#xA;    table_id int,&#xD;&#xA;    table_ref varchar(50),&#xD;&#xA;    new_value varchar(50),&#xD;&#xA;    old_Value varchar(50)&#xD;&#xA;    );&#xD;&#xA;&#xD;&#xA;    INSERT INTO history VALUES (1,1,'table_value1','new','');&#xD;&#xA;    INSERT INTO history VALUES (2,1,'table_value3','dummy', '');&#xD;&#xA;    INSERT INTO history VALUES (3,1,'table_value3','moredummydata', 'dummy');&#xD;&#xA;    INSERT INTO history VALUES (4,1,'table_value1','test','new');&#xD;&#xA;    INSERT INTO history VALUES (5,1,'table_value1','fred','test');";;sorry change schema to reflect requirement change
70997890;25160608;2879919;5;09380e13-f820-4f8c-a2a0-2ea1ae5789f1;2014-08-07 17:03:14.0;"I have done this with vb code but would like it returned as a view from a if possible.&#xD;&#xA;&#xD;&#xA;The `main table`, has `table_id, table_value1, table_value2, table_value3` for example&#xD;&#xA;There is another table called `history` with references to `table_id, history_id, history_index, table_ref, new_value, old_value`&#xD;&#xA;&#xD;&#xA;Example data from `maintable`&#xD;&#xA;&#xD;&#xA;    table_id  table_value1  table_value2  table_value3&#xD;&#xA;    1         fred          dummydata     moredummydata&#xD;&#xA;&#xD;&#xA;`history table`:&#xD;&#xA;&#xD;&#xA;    history_id  history_index  table_id  table_ref      new_value      old_Value&#xD;&#xA;    5           4              2         table_value2   bert           alpha&#xD;&#xA;    4           3              1         table_value1   test           new&#xD;&#xA;    3           3              1         table_value3   moredummydata  dummy &#xD;&#xA;    2           2              1         table_value3   dummy&#xD;&#xA;    1           1              1         table_value1   new               &#xD;&#xA;&#xD;&#xA;What i want to happen, if i provide `table_id` to function, it obtains the row from `main` table and then works through the history table descending to the `history_index` provided.&#xD;&#xA;&#xD;&#xA;For example if `table_id = 1` it should return a table with&#xD;&#xA;&#xD;&#xA;    table_id  history_index table_value1  table_value2  table_value3&#xD;&#xA;    1         3             test          dummydata     moredummydata&#xD;&#xA;    1         2             new           dummydata     dummy&#xD;&#xA;    1         1             new           dummydata     &#xD;&#xA;&#xD;&#xA;Working with a copy of the `maintable` row, i want it to apply the following:&#xD;&#xA;&#xD;&#xA;Starting at the highest `history_id`, i want it to loop through to the `history_index` provided:&#xD;&#xA;&#xD;&#xA;1. At `history_id` = 5, it will apply `old_value` to the field specified in `table_ref`.  In this case it will update `table_value1` with the value 'test'.&#xD;&#xA;&#xD;&#xA;2. Then it will move down to `history_id` = 4 and apply new_value for the field specified in table_ref.&#xD;&#xA;&#xD;&#xA;So my question is, best way of looping from history table desending and updating temporary maintable row with field specified in table_ref with the old_value then the new_value for the last entry.&#xD;&#xA;&#xD;&#xA;The main idea is that i have a table with 20-30 fields, that i want to record each time there is a change to a field. Or is there an easier way i haven't thought of?  &#xD;&#xA;&#xD;&#xA;sql fiddle showing 2 databases <http://sqlfiddle.com/#!6/d5a71/3>&#xD;&#xA;&#xD;&#xA;    CREATE TABLE main&#xD;&#xA;    (&#xD;&#xA;    table_id int NOT NULL IDENTITY PRIMARY KEY,          &#xD;&#xA;    table_value1 varchar(50),&#xD;&#xA;    table_value2 varchar(50),&#xD;&#xA;    table_value3 varchar(50)&#xD;&#xA;    );&#xD;&#xA;    INSERT INTO main VALUES ('test','dummydata','moredummydata');&#xD;&#xA;    CREATE TABLE history&#xD;&#xA;    (&#xD;&#xA;    history_id int NOT NULL IDENTITY PRIMARY KEY,&#xD;&#xA;    history_index int,&#xD;&#xA;    table_id int,&#xD;&#xA;    table_ref varchar(50),&#xD;&#xA;    new_value varchar(50),&#xD;&#xA;    old_Value varchar(50)&#xD;&#xA;    );&#xD;&#xA;&#xD;&#xA;    INSERT INTO history VALUES (1,1,'table_value1','new','');&#xD;&#xA;    INSERT INTO history VALUES (2,1,'table_value3','dummy', '');&#xD;&#xA;    INSERT INTO history VALUES (3,1,'table_value3','moredummydata', 'dummy');&#xD;&#xA;    INSERT INTO history VALUES (3,1,'table_value1','test','new');&#xD;&#xA;    INSERT INTO history VALUES (4,1,'table_value1','fred','test');&#xD;&#xA;    INSERT INTO history VALUES (5,2,'table_value2','bert','alpha');";;sorry change schema to reflect requirement change
