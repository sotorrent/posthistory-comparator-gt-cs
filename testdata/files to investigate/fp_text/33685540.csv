Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
104016833;33685540;5258871;2;d24a5807-2744-4bce-bb8b-3a0e14f7a1e8;2015-11-13 03:39:50.0;"I have been changing up my code from dealing with ints to strings. I have converted everything but a few lines that I am stumped on I know I should be able to use compareTo to get it to work but I am not understanding how to change ""if(key<insNode.getKey())"". Any tips on how I can do this? Or is compareTo the best way to change this?&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    public class BSTcode {&#xD;&#xA;    &#xD;&#xA;    	public class Node {&#xD;&#xA;    &#xD;&#xA;    		private Node left;&#xD;&#xA;    		private Node right;&#xD;&#xA;    		private String key;&#xD;&#xA;    		&#xD;&#xA;    		public Node(String key){&#xD;&#xA;    			this.key = key;&#xD;&#xA;    			left = null;&#xD;&#xA;    			right = null;&#xD;&#xA;    		}&#xD;&#xA;    		&#xD;&#xA;    		public void setLeftLeaf(Node left){&#xD;&#xA;    			this.left = left;&#xD;&#xA;    		}&#xD;&#xA;    		&#xD;&#xA;    		public void setRightLeaf(Node right){&#xD;&#xA;    			this.right = right;&#xD;&#xA;    		}&#xD;&#xA;    		&#xD;&#xA;    		public Node getLeftLeaf(){&#xD;&#xA;    			return left;&#xD;&#xA;    		}&#xD;&#xA;    		public Node getRightLeaf(){&#xD;&#xA;    			return right;&#xD;&#xA;    		}&#xD;&#xA;    		public void setKey(String k){&#xD;&#xA;    			this.key = k;&#xD;&#xA;    		}&#xD;&#xA;    		public String getKey(){&#xD;&#xA;    			return key;&#xD;&#xA;    		}&#xD;&#xA;    		public void print(){&#xD;&#xA;    			System.out.println(""The number is ""+ getKey());&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	Node root;&#xD;&#xA;    	public Node getRoot(){&#xD;&#xA;    		&#xD;&#xA;    		return root;&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	public BSTcode(){&#xD;&#xA;    		root = null;&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	public void insert (String key){&#xD;&#xA;    		 Node n1 = new Node(key);&#xD;&#xA;    		 &#xD;&#xA;    		 if(root == null){&#xD;&#xA;    			 root = n1;&#xD;&#xA;    		 }&#xD;&#xA;    		 else{&#xD;&#xA;    			 Node parIns = root;&#xD;&#xA;    			 Node insNode = root;&#xD;&#xA;    			 &#xD;&#xA;    			 while(insNode!= null){&#xD;&#xA;    				 parIns = insNode;&#xD;&#xA;    				 &#xD;&#xA;    				 if(key<insNode.getKey()){&#xD;&#xA;    					 insNode =insNode.getLeftLeaf();&#xD;&#xA;    					 &#xD;&#xA;    				 }&#xD;&#xA;    				 else{&#xD;&#xA;    					 insNode = insNode.getRightLeaf();&#xD;&#xA;    				 }&#xD;&#xA;    				 &#xD;&#xA;    			 }&#xD;&#xA;    			 if(key<parIns.getKey()){&#xD;&#xA;    				 parIns.setLeftLeaf(n1);&#xD;&#xA;    			 }&#xD;&#xA;    			 else{&#xD;&#xA;    				 parIns.setRightLeaf(n1);&#xD;&#xA;    			 }&#xD;&#xA;    		 }&#xD;&#xA;    				 &#xD;&#xA;    			 }&#xD;&#xA;    			 public void printInorder(Node n){&#xD;&#xA;    				 &#xD;&#xA;    				 if(n!= null){&#xD;&#xA;    					 printInorder(n.getLeftLeaf());&#xD;&#xA;    					 n.print();&#xD;&#xA;    					 printInorder(n.getRightLeaf());&#xD;&#xA;    		 }&#xD;&#xA;    		 &#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;";;
104017007;33685540;5258871;5;13c0d4e2-7910-43a6-9c7f-fc63a0fdc966;2015-11-13 03:45:51.0;"I have been changing my code from ints to strings. I have converted everything but two lines that I am stumped on I knowvI should be able to use compareTo to get it to work but I am not understanding how to change&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;    if(key<insNode.getKey()){&#xD;&#xA;&#xD;&#xA;Any tips on how I can do this? Or is compareTo the best way to change this?&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;         public class BSTcode {&#xD;&#xA;            &#xD;&#xA;            	public class Node {&#xD;&#xA;            &#xD;&#xA;            		private Node left;&#xD;&#xA;        		private Node right;&#xD;&#xA;        		private String key;&#xD;&#xA;        		&#xD;&#xA;        		public Node(String key){&#xD;&#xA;        			this.key = key;&#xD;&#xA;        			left = null;&#xD;&#xA;        			right = null;&#xD;&#xA;        		}&#xD;&#xA;        		&#xD;&#xA;        		public void setLeftLeaf(Node left){&#xD;&#xA;        			this.left = left;&#xD;&#xA;        		}&#xD;&#xA;        		&#xD;&#xA;        		public void setRightLeaf(Node right){&#xD;&#xA;        			this.right = right;&#xD;&#xA;        		}&#xD;&#xA;        		&#xD;&#xA;        		public Node getLeftLeaf(){&#xD;&#xA;        			return left;&#xD;&#xA;        		}&#xD;&#xA;        		public Node getRightLeaf(){&#xD;&#xA;        			return right;&#xD;&#xA;        		}&#xD;&#xA;        		public void setKey(String k){&#xD;&#xA;        			this.key = k;&#xD;&#xA;        		}&#xD;&#xA;        		public String getKey(){&#xD;&#xA;        			return key;&#xD;&#xA;        		}&#xD;&#xA;        		public void print(){&#xD;&#xA;        			System.out.println(""The number is ""+ getKey());&#xD;&#xA;        		}&#xD;&#xA;        	}&#xD;&#xA;        &#xD;&#xA;        	Node root;&#xD;&#xA;        	public Node getRoot(){&#xD;&#xA;        		&#xD;&#xA;        		return root;&#xD;&#xA;        	}&#xD;&#xA;        	&#xD;&#xA;        	public BSTcode(){&#xD;&#xA;        		root = null;&#xD;&#xA;        	}&#xD;&#xA;        	&#xD;&#xA;        	public void insert (String key){&#xD;&#xA;        		 Node n1 = new Node(key);&#xD;&#xA;        		 &#xD;&#xA;        		 if(root == null){&#xD;&#xA;        			 root = n1;&#xD;&#xA;        		 }&#xD;&#xA;        		 else{&#xD;&#xA;        			 Node parIns = root;&#xD;&#xA;        			 Node insNode = root;&#xD;&#xA;        			 &#xD;&#xA;        			 while(insNode!= null){&#xD;&#xA;        				 parIns = insNode;&#xD;&#xA;        				 &#xD;&#xA;        				 if(key<insNode.getKey()){&#xD;&#xA;        					 insNode =insNode.getLeftLeaf();&#xD;&#xA;        					 &#xD;&#xA;        				 }&#xD;&#xA;        				 else{&#xD;&#xA;        					 insNode = insNode.getRightLeaf();&#xD;&#xA;        				 }&#xD;&#xA;        				 &#xD;&#xA;        			 }&#xD;&#xA;        			 if(key<parIns.getKey()){&#xD;&#xA;        				 parIns.setLeftLeaf(n1);&#xD;&#xA;        			 }&#xD;&#xA;        			 else{&#xD;&#xA;        				 parIns.setRightLeaf(n1);&#xD;&#xA;        			 }&#xD;&#xA;        		 }&#xD;&#xA;        				 &#xD;&#xA;        			 }&#xD;&#xA;        			 public void printInorder(Node n){&#xD;&#xA;        				 &#xD;&#xA;        				 if(n!= null){&#xD;&#xA;        					 printInorder(n.getLeftLeaf());&#xD;&#xA;        					 n.print();&#xD;&#xA;        					 printInorder(n.getRightLeaf());&#xD;&#xA;        		 }&#xD;&#xA;        		 &#xD;&#xA;        	}&#xD;&#xA;        }";;added 370 characters in body
