Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
49671550;19472769;529289;2;f91b4310-d6ab-4b1a-83d8-7afa53ebe793;2013-10-20 00:53:42.0;"I have an emberjs app that integrates with datepicker. When I click a date on the datepicker, a computed property is supposed to compare the clicked date with the dates on *timeslot** to see if there is a match  and I expect the template to refresh based on that, either listing the available timeSlots or saying there is not. Unfortunately, the template doesn't refresh or present new data.&#xD;&#xA;&#xD;&#xA;This is the **[jsfiddle](http://jsfiddle.net/FDAsT/)**, the important controllers/routes/templates are **timeSlot**, **appointment**, **datePicker** and the datepickerComponenet.&#xD;&#xA;&#xD;&#xA;In the jsfiddle, you need to click on see more and scroll down, to see the loaded calendar and the dates that have timeslot coloured in red. The problem is that clicking on any date coloured in red is supposed to re-render the timeSlot template and recompute, the **displaySelectedDate** computed property. Right now, it only renders the **timeslot template**, the first time you click on a date, after that the template is not refreshed on all subsequent clicks. &#xD;&#xA;&#xD;&#xA;This is the controller. Previously, I called **.volatile** on the **displaySelectedDate property** but there was no change, so I removed it and added the **observer** shown here but there is still no change.&#xD;&#xA;&#xD;&#xA;       &#xD;&#xA;    App.TimeSlotController = Ember.ArrayController.extend({&#xD;&#xA;      needs: 'appointment',&#xD;&#xA;      content: [ ],&#xD;&#xA;    &#xD;&#xA;     apptId: null,&#xD;&#xA;     apptDate: null,&#xD;&#xA;     day: Ember.A([ ]),&#xD;&#xA;    &#xD;&#xA;     contentDidChange: function(){&#xD;&#xA;       a = this.get('day'); &#xD;&#xA;         console.log(a);&#xD;&#xA;       return a;&#xD;&#xA;      }.observes('day'),&#xD;&#xA;    &#xD;&#xA;      displaySelectedDate: function(){&#xD;&#xA;        a = moment(this.get('apptDate')).unix();&#xD;&#xA;       &#xD;&#xA;        b = moment.utc(this.get('day').toString()).unix(); &#xD;&#xA;      &#xD;&#xA;        x = (a === b);&#xD;&#xA;       &#xD;&#xA;        return x;&#xD;&#xA;        &#xD;&#xA;      }.property('day.@each', 'apptDate'),                                                 &#xD;&#xA;   &#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;This is a smaller version of thesame code, I created a second **[jsfiddle](http://jsfiddle.net/Xajsr/)**. In this version the **datePicker** controller and route are removed and the code it had, were moved to the **appointment** controller. For some reason the dates with appointment are not getting coloured in red which it should be.&#xD;&#xA;&#xD;&#xA;Thanks for your help.&#xD;&#xA;    ";;
49671683;19472769;529289;5;521f8011-5cc8-448b-9cf4-4fac0730d358;2013-10-20 00:58:57.0;"I have an emberjs app that integrates with datepicker. When I click a date on the datepicker, a computed property is supposed to compare the clicked date with the dates on *timeslot** to see if there is a match  and I expect the template to refresh based on that, either listing the available timeSlots or saying there is not. Unfortunately, the template doesn't refresh or present new data.&#xD;&#xA;&#xD;&#xA;This is the **[jsfiddle](http://jsfiddle.net/FDAsT/)**, the important controllers/routes/templates are **timeSlot**, **appointment**, **datePicker** and the datepickerComponenet.&#xD;&#xA;&#xD;&#xA;In the jsfiddle, you need to click on see more and scroll down, to see the loaded calendar and the dates that have timeslot coloured in red. The problem is that clicking on any date coloured in red is supposed to re-render the timeSlot template and recompute, the **displaySelectedDate** computed property. Right now, it only renders the **timeslot template**, the first time you click on a date, after that the template is not refreshed on all subsequent clicks. &#xD;&#xA;&#xD;&#xA;This is the controller. It also seems the computed property is not being called more than once. As a result, previously, I called **.volatile** on the **displaySelectedDate computed property** but there was no change, so I removed it and added the **observer** shown here but there is still no change.&#xD;&#xA;&#xD;&#xA;       &#xD;&#xA;    App.TimeSlotController = Ember.ArrayController.extend({&#xD;&#xA;      needs: 'appointment',&#xD;&#xA;      content: [ ],&#xD;&#xA;    &#xD;&#xA;     apptId: null,&#xD;&#xA;     apptDate: null,&#xD;&#xA;     day: Ember.A([ ]),&#xD;&#xA;    &#xD;&#xA;     contentDidChange: function(){&#xD;&#xA;       a = this.get('day'); &#xD;&#xA;         console.log(a);&#xD;&#xA;       return a;&#xD;&#xA;      }.observes('day'),&#xD;&#xA;    &#xD;&#xA;      displaySelectedDate: function(){&#xD;&#xA;        a = moment(this.get('apptDate')).unix();&#xD;&#xA;       &#xD;&#xA;        b = moment.utc(this.get('day').toString()).unix(); &#xD;&#xA;      &#xD;&#xA;        x = (a === b);&#xD;&#xA;       &#xD;&#xA;        return x;&#xD;&#xA;        &#xD;&#xA;      }.property('day.@each', 'apptDate'),                                                 &#xD;&#xA;   &#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;This is a smaller version of thesame code, I created a second **[jsfiddle](http://jsfiddle.net/Xajsr/)**. In this version the **datePicker** controller and route are removed and the code it had, were moved to the **appointment** controller. For some reason the dates with appointment are not getting coloured in red which it should be.&#xD;&#xA;&#xD;&#xA;Thanks for your help.&#xD;&#xA;    ";;added 94 characters in body
49697048;19472769;529289;5;5910f3dd-05f3-49f4-a0b6-7c7224fd923c;2013-10-20 16:16:33.0;"I have an emberjs app that integrates with datepicker. When I click a date on the datepicker, a computed property is supposed to compare the clicked date with the dates on *timeslot** to see if there is a match  and I expect the template to refresh based on that, either listing the available timeSlots or saying there is not. Unfortunately, the template doesn't refresh or present new data.&#xD;&#xA;&#xD;&#xA;This is the **[jsfiddle](http://jsfiddle.net/FDAsT/)**, the important controllers/routes/templates are **timeSlot**, **appointment**, **datePicker** and the datepickerComponenet.&#xD;&#xA;&#xD;&#xA;In the jsfiddle, you need to click on see more and scroll down, to see the loaded calendar and the dates that have timeslot coloured in red. The problem is that clicking on any date coloured in red is supposed to re-render the timeSlot template and recompute, the **displaySelectedDate** computed property. Right now, it only renders the **timeslot template**, the first time you click on a date, after that the template is not refreshed on all subsequent clicks. &#xD;&#xA;&#xD;&#xA;This is the controller. It also seems the computed property is not being called more than once. As a result, previously, I called **.volatile** on the **displaySelectedDate computed property** but there was no change, so I removed it and added the **observer** shown here but there is still no change.&#xD;&#xA;&#xD;&#xA;       &#xD;&#xA;    App.TimeSlotController = Ember.ArrayController.extend({&#xD;&#xA;      needs: 'appointment',&#xD;&#xA;      content: [ ],&#xD;&#xA;    &#xD;&#xA;     apptId: null,&#xD;&#xA;     apptDate: null,&#xD;&#xA;     day: Ember.A([ ]),&#xD;&#xA;    &#xD;&#xA;     contentDidChange: function(){&#xD;&#xA;       a = this.get('day'); &#xD;&#xA;         console.log(a);&#xD;&#xA;       return a;&#xD;&#xA;      }.observes('day'),&#xD;&#xA;    &#xD;&#xA;      displaySelectedDate: function(){&#xD;&#xA;        a = moment(this.get('apptDate')).unix();&#xD;&#xA;       &#xD;&#xA;        b = moment.utc(this.get('day').toString()).unix(); &#xD;&#xA;      &#xD;&#xA;        x = (a === b);&#xD;&#xA;       &#xD;&#xA;        return x;&#xD;&#xA;        &#xD;&#xA;      }.property('day.@each', 'apptDate'),                                                 &#xD;&#xA;   &#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;This is a smaller version of thesame code, I created a second **[jsfiddle](http://jsfiddle.net/Xajsr/)**. In this version the **datePicker** controller and route are removed and the code it had, were moved to the **appointment** controller. For some reason the dates with appointment are not getting coloured in red which it should be.&#xD;&#xA;&#xD;&#xA;However in this 2nd fiddle, when I pass that controller into an emberjs component with&#xD;&#xA;&#xD;&#xA;      {{date-picker datePickerController=controller}}&#xD;&#xA;Inside the component, I can get the correct instance of the controller , using the code below&#xD;&#xA;&#xD;&#xA; datePicker = _this.get('datePickerController');&#xD;&#xA; console.log(datePicker), shows the dateArray with its content.&#xD;&#xA;but the array displays as empty, when i fectch it based on the above instance using the code below.&#xD;&#xA;&#xD;&#xA;  controllerContent = datePicker.get('dateArray'); &#xD;&#xA;However if I add the dateArray in a handlebars expressions in the appointments template, it renders its content:&#xD;&#xA;&#xD;&#xA;  {{dateArray}}&#xD;&#xA;So why its dateArray empty inside emberjs component when controller instance the emberjs component has the dateArray&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Thanks for your help.&#xD;&#xA;    ";;added 768 characters in body
49789093;19472769;529289;5;159c9ee7-93a3-446d-b8c2-3922ed0c275a;2013-10-21 22:09:14.0;"I have an emberjs app that integrates with datepicker. When I click a date on the datepicker, a computed property is supposed to compare the clicked date with the dates on *timeslot** to see if there is a match  and I expect the template to refresh based on that, either listing the available timeSlots or saying there is not. Unfortunately, the template doesn't refresh or present new data.&#xD;&#xA;&#xD;&#xA;This is the **[jsfiddle](http://jsfiddle.net/FDAsT/)**, the important controllers/routes/templates are **timeSlot**, **appointment**, **datePicker** and the datepickerComponenet.&#xD;&#xA;&#xD;&#xA;In the jsfiddle, you need to click on see more and scroll down, to see the loaded calendar and the dates that have timeslot coloured in red. The problem is that clicking on any date coloured in red is supposed to re-render the timeSlot template and recompute, the **displaySelectedDate** computed property. Right now, it only renders the **timeslot template**, the first time you click on a date, after that the template is not refreshed on all subsequent clicks. &#xD;&#xA;&#xD;&#xA;This is the controller. It also seems the computed property is not being called more than once. As a result, previously, I called **.volatile** on the **displaySelectedDate computed property** but there was no change, so I removed it and added the **observer** shown here but there is still no change.&#xD;&#xA;       &#xD;&#xA;    App.TimeSlotController = Ember.ArrayController.extend({&#xD;&#xA;      needs: 'appointment',&#xD;&#xA;      content: [ ],&#xD;&#xA;    &#xD;&#xA;     apptId: null,&#xD;&#xA;     apptDate: null,&#xD;&#xA;     day: Ember.A([ ]),&#xD;&#xA;    &#xD;&#xA;     contentDidChange: function(){&#xD;&#xA;       a = this.get('day'); &#xD;&#xA;         console.log(a);&#xD;&#xA;       return a;&#xD;&#xA;      }.observes('day'),&#xD;&#xA;    &#xD;&#xA;      displaySelectedDate: function(){&#xD;&#xA;        a = moment(this.get('apptDate')).unix();&#xD;&#xA;       &#xD;&#xA;        b = moment.utc(this.get('day').toString()).unix(); &#xD;&#xA;      &#xD;&#xA;        x = (a === b);&#xD;&#xA;       &#xD;&#xA;        return x;&#xD;&#xA;        &#xD;&#xA;      }.property('day.@each', 'apptDate'),                                                 &#xD;&#xA;   &#xD;&#xA;   });&#xD;&#xA;&#xD;&#xA;The route from where I populate timeSlot by first fetch the appointment&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    App.TimeSlotRoute = Ember.Route.extend({&#xD;&#xA;    &#xD;&#xA;       setupController: function(controller, model) {&#xD;&#xA;       &#xD;&#xA;         self = this;&#xD;&#xA;         self._super(controller, model);&#xD;&#xA;        &#xD;&#xA;         parent = self.controllerFor('appointment');&#xD;&#xA;        &#xD;&#xA;         self.controller = controller;&#xD;&#xA;&#xD;&#xA;        c =   parent.get('timeSlots').then(function(data){&#xD;&#xA;            f =  self.controller.set('content', data); &#xD;&#xA;      &#xD;&#xA;         });          &#xD;&#xA;       }&#xD;&#xA;     })&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;This is a smaller version of thesame code, I created a second **[jsfiddle](http://jsfiddle.net/Xajsr/2/)**. In this version the **datePicker** controller and route are removed and the code it had, were moved to the **appointment** controller. If you click on it, you will see that the **timeSlots** with appointment are not getting coloured in red which it should be.&#xD;&#xA;&#xD;&#xA;     &#xD;&#xA;      App.AppointmentController = Ember.ObjectController.extend({&#xD;&#xA;    &#xD;&#xA;        dateArray: function(){&#xD;&#xA;           _this = this;  &#xD;&#xA;       &#xD;&#xA;           fetchDates = [ ];&#xD;&#xA;        &#xD;&#xA;           var aa = _this.get('content'); &#xD;&#xA;               &#xD;&#xA;           var yy = aa.get('timeSlots');&#xD;&#xA;        &#xD;&#xA;            yy.then(function(hh){&#xD;&#xA;  &#xD;&#xA;              nn = hh.map(function(item){ return moment.utc(item.get('startTime')).format(""YYYY-MM-DD"");&#xD;&#xA;             });&#xD;&#xA;         &#xD;&#xA;         pp =  fetchDates.pushObjects([nn]);&#xD;&#xA;         &#xD;&#xA;         return nn;&#xD;&#xA;       });       &#xD;&#xA;     &#xD;&#xA;        return fetchDates;&#xD;&#xA;     }.property('content.@each.timeSlots')&#xD;&#xA;     &#xD;&#xA;   });&#xD;&#xA;&#xD;&#xA; Doing  **console log** suggestions the **dateArray** in the appointment controller returns an array in the form :&#xD;&#xA;&#xD;&#xA;      [Array[2]]&#xD;&#xA;&#xD;&#xA;Butfor the datepicker calendar to be coloured with dates with timeSlots, the array returned should be in the form returned by the first **TimeSlot Route above** in the beginning which is:&#xD;&#xA;&#xD;&#xA;      [""2013-10-18"", ""2013-10-25"", ""2013-10-25"", ""2013-10-18""]&#xD;&#xA;&#xD;&#xA;**what I want**&#xD;&#xA;&#xD;&#xA; Is doe a very click on  a date in datePicker to re-render the **timeSlot** template and secondly for me to be able to load **timeSlot startTime** in the calendar from the **appointment controller**&#xD;&#xA;Thanks for your help.&#xD;&#xA;    ";;added 1086 characters in body
49790960;19472769;529289;5;49436c00-a208-49ef-9f8d-ba6d743c1f68;2013-10-21 22:52:07.0;"I have an emberjs app that integrates with datepicker. When I click a date on the datepicker, a computed property is supposed to compare the clicked date with the dates on *timeslot** to see if there is a match  and I expect the template to refresh based on that, either listing the available timeSlots or saying there is not. Unfortunately, the template doesn't refresh or present new data.&#xD;&#xA;&#xD;&#xA;This is the **[jsfiddle](http://jsfiddle.net/FDAsT/)**, the important controllers/routes/templates are **timeSlot**, **appointment**, **datePicker** and the datepickerComponenet.&#xD;&#xA;&#xD;&#xA;In the jsfiddle, you need to click on see more and scroll down, to see the loaded calendar and the dates that have timeslot coloured in red. The problem is that clicking on any date coloured in red is supposed to re-render the timeSlot template and recompute, the **displaySelectedDate** computed property. Right now, it only renders the **timeslot template**, the first time you click on a date, after that the template is not refreshed on all subsequent clicks. &#xD;&#xA;&#xD;&#xA;This is the controller. It also seems the computed property is not being called more than once. As a result, previously, I called **.volatile** on the **displaySelectedDate computed property** but there was no change, so I removed it and added the **observer** shown here but there is still no change.&#xD;&#xA;       &#xD;&#xA;    App.TimeSlotController = Ember.ArrayController.extend({&#xD;&#xA;      needs: 'appointment',&#xD;&#xA;      content: [ ],&#xD;&#xA;    &#xD;&#xA;     apptId: null,&#xD;&#xA;     apptDate: null,&#xD;&#xA;     day: Ember.A([ ]),&#xD;&#xA;    &#xD;&#xA;     contentDidChange: function(){&#xD;&#xA;       a = this.get('day'); &#xD;&#xA;         console.log(a);&#xD;&#xA;       return a;&#xD;&#xA;      }.observes('day'),&#xD;&#xA;    &#xD;&#xA;      displaySelectedDate: function(){&#xD;&#xA;        a = moment(this.get('apptDate')).unix();&#xD;&#xA;       &#xD;&#xA;        b = moment.utc(this.get('day').toString()).unix(); &#xD;&#xA;      &#xD;&#xA;        x = (a === b);&#xD;&#xA;       &#xD;&#xA;        return x;&#xD;&#xA;        &#xD;&#xA;      }.property('day.@each', 'apptDate'),                                                 &#xD;&#xA;   &#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;The route from where I populate timeSlot by first fetch the appointment&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    App.TimeSlotRoute = Ember.Route.extend({&#xD;&#xA;    &#xD;&#xA;       setupController: function(controller, model) {&#xD;&#xA;       &#xD;&#xA;         self = this;&#xD;&#xA;         self._super(controller, model);&#xD;&#xA;        &#xD;&#xA;         parent = self.controllerFor('appointment');&#xD;&#xA;        &#xD;&#xA;         self.controller = controller;&#xD;&#xA;&#xD;&#xA;        c =   parent.get('timeSlots').then(function(data){&#xD;&#xA;            f =  self.controller.set('content', data); &#xD;&#xA;      &#xD;&#xA;         });          &#xD;&#xA;       }&#xD;&#xA;     })&#xD;&#xA;&#xD;&#xA;The datepicker controller that supplies array of dates that will be coloured in the datepicker. If we use the uncommented out version of of **dateArray computed property** that fetches **appointment startDate** the dates are coloured as expected. But if comment the first version and uncomment the second version of **dateArray computed property** that fetches **timeSlot by startTime** the calebdar are not coloured. **Any ideas why this so.&#xD;&#xA;&#xD;&#xA;      App.DatePickerController =  Ember.ArrayController.extend({ &#xD;&#xA;         needs: ['appointments', 'appointment', 'timeSlot'],&#xD;&#xA;&#xD;&#xA;       time: Ember.computed.alias('controllers.timeSlot.content'),&#xD;&#xA;       appointments: Ember.computed.alias('controllers.appointments.content'),&#xD;&#xA;    &#xD;&#xA;       dateArray: function(){&#xD;&#xA;         _this = this;  &#xD;&#xA;         var fetchDates = _this.get('appointments');&#xD;&#xA;      &#xD;&#xA;         return  fetchDates.map(function(item){ &#xD;&#xA;           return moment.utc(item.get('startDate')).format(""YYYY-MM-DD"");&#xD;&#xA;         });&#xD;&#xA;       }.property('appointments.@each.startDate'),&#xD;&#xA;    &#xD;&#xA;       /*&#xD;&#xA;       dateArray: function(){&#xD;&#xA;         _this = this;  &#xD;&#xA;         var fetchDates = _this.get('time');&#xD;&#xA;      &#xD;&#xA;         return  fetchDates.map(function(item){ &#xD;&#xA;          return moment.utc(item.get('startTime')).format(""YYYY-MM-DD"");&#xD;&#xA;         });&#xD;&#xA;&#xD;&#xA;        }.property('timeSlot.@each.startTime'),  &#xD;&#xA;       */&#xD;&#xA;     });&#xD;&#xA;&#xD;&#xA;This is a smaller version of thesame code, I created a second **[jsfiddle](http://jsfiddle.net/Xajsr/2/)**. In this version the **datePicker** controller and route are removed and the code it had, were moved to the **appointment** controller. If you click on it, you will see that the **timeSlots** with appointment are not getting coloured in red which it should be.&#xD;&#xA;&#xD;&#xA;     &#xD;&#xA;      App.AppointmentController = Ember.ObjectController.extend({&#xD;&#xA;    &#xD;&#xA;        dateArray: function(){&#xD;&#xA;           _this = this;  &#xD;&#xA;       &#xD;&#xA;           fetchDates = [ ];&#xD;&#xA;        &#xD;&#xA;           var aa = _this.get('content'); &#xD;&#xA;               &#xD;&#xA;           var yy = aa.get('timeSlots');&#xD;&#xA;        &#xD;&#xA;            yy.then(function(hh){&#xD;&#xA;  &#xD;&#xA;              nn = hh.map(function(item){ return moment.utc(item.get('startTime')).format(""YYYY-MM-DD"");&#xD;&#xA;             });&#xD;&#xA;         &#xD;&#xA;         pp =  fetchDates.pushObjects([nn]);&#xD;&#xA;         &#xD;&#xA;         return nn;&#xD;&#xA;       });       &#xD;&#xA;     &#xD;&#xA;        return fetchDates;&#xD;&#xA;     }.property('content.@each.timeSlots')&#xD;&#xA;     &#xD;&#xA;   });&#xD;&#xA;&#xD;&#xA; Doing  **console log** suggestions the **dateArray** in the appointment controller returns an array in the form :&#xD;&#xA;&#xD;&#xA;      [Array[2]]&#xD;&#xA;&#xD;&#xA;But the array returned by the **datepickerController** when using the 1st version of  **dateArray computed property** that colors the calendar by **appointment startDate**,  is of the form:&#xD;&#xA;&#xD;&#xA;      [""2013-10-18"", ""2013-10-25"", ""2013-10-25"", ""2013-10-18""]&#xD;&#xA;&#xD;&#xA;**what I want**&#xD;&#xA;&#xD;&#xA; Is do a very click on  a date in datePicker to re-render the **timeSlot** template and secondly for me to be able to load **timeSlot startTime** in the calendar either using the **appointment controller** or the second version of **dateArray computed property** from the **datePicker controler**.&#xD;&#xA;&#xD;&#xA;Thanks for your help.&#xD;&#xA;    ";;added 1485 characters in body
49793535;19472769;529289;5;2fb38390-65c0-4e88-9852-a365926f4f4b;2013-10-22 00:20:01.0;"I have an emberjs app that integrates with datepicker. When I click a date on the datepicker, a computed property is supposed to compare the clicked date with the dates on *timeslot** to see if there is a match  and I expect the template to refresh based on that, either listing the available timeSlots or saying there is not. Unfortunately, the template doesn't refresh or present new data.&#xD;&#xA;&#xD;&#xA;This is the **[jsfiddle](http://jsfiddle.net/FDAsT/)**, the important controllers/routes/templates are **timeSlot**, **appointment**, **datePicker** and the datepickerComponenet.&#xD;&#xA;&#xD;&#xA;In the jsfiddle, you need to click on see more and scroll down, to see the loaded calendar and the dates that have timeslot coloured in red. The problem is that clicking on any date coloured in red is supposed to re-render the timeSlot template and recompute, the **displaySelectedDate** computed property. Right now, it only renders the **timeslot template**, the first time you click on a date, after that the template is not refreshed on all subsequent clicks. &#xD;&#xA;&#xD;&#xA;This is the controller. It also seems the computed property is not being called more than once. As a result, previously, I called **.volatile** on the **displaySelectedDate computed property** but there was no change, so I removed it and added the **observer** shown here but there is still no change.&#xD;&#xA;       &#xD;&#xA;    App.TimeSlotController = Ember.ArrayController.extend({&#xD;&#xA;      needs: 'appointment',&#xD;&#xA;      content: [ ],&#xD;&#xA;    &#xD;&#xA;     apptId: null,&#xD;&#xA;     apptDate: null,&#xD;&#xA;     day: Ember.A([ ]),&#xD;&#xA;    &#xD;&#xA;     contentDidChange: function(){&#xD;&#xA;       a = this.get('day'); &#xD;&#xA;         console.log(a);&#xD;&#xA;       return a;&#xD;&#xA;      }.observes('day'),&#xD;&#xA;    &#xD;&#xA;      displaySelectedDate: function(){&#xD;&#xA;        a = moment(this.get('apptDate')).unix();&#xD;&#xA;       &#xD;&#xA;        b = moment.utc(this.get('day').toString()).unix(); &#xD;&#xA;      &#xD;&#xA;        x = (a === b);&#xD;&#xA;       &#xD;&#xA;        return x;&#xD;&#xA;        &#xD;&#xA;      }.property('day.@each', 'apptDate'),                                                 &#xD;&#xA;   &#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;The route from where I populate timeSlot by first fetch the appointment&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    App.TimeSlotRoute = Ember.Route.extend({&#xD;&#xA;    &#xD;&#xA;       setupController: function(controller, model) {&#xD;&#xA;       &#xD;&#xA;         self = this;&#xD;&#xA;         self._super(controller, model);&#xD;&#xA;        &#xD;&#xA;         parent = self.controllerFor('appointment');&#xD;&#xA;        &#xD;&#xA;         self.controller = controller;&#xD;&#xA;&#xD;&#xA;        c =   parent.get('timeSlots').then(function(data){&#xD;&#xA;            f =  self.controller.set('content', data); &#xD;&#xA;      &#xD;&#xA;         });          &#xD;&#xA;       }&#xD;&#xA;     })&#xD;&#xA;&#xD;&#xA;The datepicker controller that supplies array of dates that will be coloured in the datepicker. If we use the uncommented out version of of **dateArray computed property** that fetches **appointment startDate** the dates are coloured as expected. But if comment the first version and uncomment the second version of **dateArray computed property** that fetches **timeSlot by startTime** the calebdar are not coloured. **Any ideas why this so**.&#xD;&#xA;&#xD;&#xA;      App.DatePickerController =  Ember.ArrayController.extend({ &#xD;&#xA;         needs: ['appointments', 'appointment', 'timeSlot'],&#xD;&#xA;&#xD;&#xA;       time: Ember.computed.alias('controllers.timeSlot.content'),&#xD;&#xA;       appointments: Ember.computed.alias('controllers.appointments.content'),&#xD;&#xA;    &#xD;&#xA;       dateArray: function(){&#xD;&#xA;         _this = this;  &#xD;&#xA;         var fetchDates = _this.get('appointments');&#xD;&#xA;      &#xD;&#xA;         return  fetchDates.map(function(item){ &#xD;&#xA;           return moment.utc(item.get('startDate')).format(""YYYY-MM-DD"");&#xD;&#xA;         });&#xD;&#xA;       }.property('appointments.@each.startDate'),&#xD;&#xA;    &#xD;&#xA;       /*&#xD;&#xA;       dateArray: function(){&#xD;&#xA;         _this = this;  &#xD;&#xA;         var fetchDates = _this.get('time');&#xD;&#xA;      &#xD;&#xA;         return  fetchDates.map(function(item){ &#xD;&#xA;          return moment.utc(item.get('startTime')).format(""YYYY-MM-DD"");&#xD;&#xA;         });&#xD;&#xA;&#xD;&#xA;        }.property('timeSlot.@each.startTime'),  &#xD;&#xA;       */&#xD;&#xA;     });&#xD;&#xA;&#xD;&#xA;This is a smaller version of thesame code, I created a second **[jsfiddle](http://jsfiddle.net/Xajsr/2/)**. In this version the **datePicker** controller and route are removed and the code it had, were moved to the **appointment** controller. If you click on it, you will see that the **timeSlots** with appointment are not getting coloured in red which it should be.&#xD;&#xA;&#xD;&#xA;     &#xD;&#xA;      App.AppointmentController = Ember.ObjectController.extend({&#xD;&#xA;    &#xD;&#xA;        dateArray: function(){&#xD;&#xA;           _this = this;  &#xD;&#xA;       &#xD;&#xA;           fetchDates = [ ];&#xD;&#xA;        &#xD;&#xA;           var aa = _this.get('content'); &#xD;&#xA;               &#xD;&#xA;           var yy = aa.get('timeSlots');&#xD;&#xA;        &#xD;&#xA;            yy.then(function(hh){&#xD;&#xA;  &#xD;&#xA;              nn = hh.map(function(item){ return moment.utc(item.get('startTime')).format(""YYYY-MM-DD"");&#xD;&#xA;             });&#xD;&#xA;         &#xD;&#xA;         pp =  fetchDates.pushObjects([nn]);&#xD;&#xA;         &#xD;&#xA;         return nn;&#xD;&#xA;       });       &#xD;&#xA;     &#xD;&#xA;        return fetchDates;&#xD;&#xA;     }.property('content.@each.timeSlots')&#xD;&#xA;     &#xD;&#xA;   });&#xD;&#xA;&#xD;&#xA; Doing  **console log** suggestions the **dateArray** in the appointment controller returns an array in the form :&#xD;&#xA;&#xD;&#xA;      [Array[2]]&#xD;&#xA;&#xD;&#xA;But the array returned by the **datepickerController** when using the 1st version of  **dateArray computed property** that colors the calendar by **appointment startDate**,  is of the form:&#xD;&#xA;&#xD;&#xA;      [""2013-10-18"", ""2013-10-25"", ""2013-10-25"", ""2013-10-18""]&#xD;&#xA;&#xD;&#xA;**what I want**&#xD;&#xA;&#xD;&#xA; Is do a very click on  a date in datePicker to re-render the **timeSlot** template and secondly for me to be able to load **timeSlot startTime** in the calendar either using the **appointment controller** or the second version of **dateArray computed property** from the **datePicker controler**.&#xD;&#xA;&#xD;&#xA;**This is the screen-shot of the appointment startDate on the calendar basedon the first jsfiddle**&#xD;&#xA;![enter image description here][1]&#xD;&#xA;&#xD;&#xA;**This is the screenshot when I try to pass timeSlot startTime to the calendar based on either the 2nd jsfiddle, or the commented out dateAarray property in the datepicker controller of the 1st jsfiddle. Note the calendar remains uncoloured in both instances**&#xD;&#xA;![enter image description here][2]&#xD;&#xA;&#xD;&#xA;Thanks for your help.&#xD;&#xA;    &#xD;&#xA;  [1]: http://i.stack.imgur.com/7cNDy.png&#xD;&#xA;  [2]: http://i.stack.imgur.com/llYpE.png";;added 507 characters in body
49794065;19472769;529289;5;11e90b31-b2b1-4e1d-af0f-5103e3017748;2013-10-22 00:37:44.0;"I have an emberjs app that integrates with datepicker. When I click a date on the datepicker, a computed property is supposed to compare the clicked date with the dates on *timeslot** to see if there is a match  and I expect the template to refresh based on that, either listing the available timeSlots or saying there is not. Unfortunately, the template doesn't refresh or present new data.&#xD;&#xA;&#xD;&#xA;This is the **[jsfiddle](http://jsfiddle.net/FDAsT/)**, the important controllers/routes/templates are **timeSlot**, **appointment**, **datePicker** and the datepickerComponenet.&#xD;&#xA;&#xD;&#xA;In the jsfiddle, you need to click on see more and scroll down, to see the loaded calendar and the dates that have timeslot coloured in red. The problem is that clicking on any date coloured in red is supposed to re-render the timeSlot template and recompute, the **displaySelectedDate** computed property. Right now, it only renders the **timeslot template**, the first time you click on a date, after that the template is not refreshed on all subsequent clicks. &#xD;&#xA;&#xD;&#xA;This is the controller. It also seems the computed property is not being called more than once. As a result, previously, I called **.volatile** on the **displaySelectedDate computed property** but there was no change, so I removed it and added the **observer** shown here but there is still no change.&#xD;&#xA;       &#xD;&#xA;    App.TimeSlotController = Ember.ArrayController.extend({&#xD;&#xA;      needs: 'appointment',&#xD;&#xA;      content: [ ],&#xD;&#xA;    &#xD;&#xA;     apptId: null,&#xD;&#xA;     apptDate: null,&#xD;&#xA;     day: Ember.A([ ]),&#xD;&#xA;    &#xD;&#xA;     contentDidChange: function(){&#xD;&#xA;       a = this.get('day'); &#xD;&#xA;         console.log(a);&#xD;&#xA;       return a;&#xD;&#xA;      }.observes('day'),&#xD;&#xA;    &#xD;&#xA;      displaySelectedDate: function(){&#xD;&#xA;        a = moment(this.get('apptDate')).unix();&#xD;&#xA;       &#xD;&#xA;        b = moment.utc(this.get('day').toString()).unix(); &#xD;&#xA;      &#xD;&#xA;        x = (a === b);&#xD;&#xA;       &#xD;&#xA;        return x;&#xD;&#xA;        &#xD;&#xA;      }.property('day.@each', 'apptDate'),                                                 &#xD;&#xA;   &#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;The route from where I **populate timeSlot** by first fetching the appointment&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    App.TimeSlotRoute = Ember.Route.extend({&#xD;&#xA;    &#xD;&#xA;       setupController: function(controller, model) {&#xD;&#xA;       &#xD;&#xA;         self = this;&#xD;&#xA;         self._super(controller, model);&#xD;&#xA;        &#xD;&#xA;         parent = self.controllerFor('appointment');&#xD;&#xA;        &#xD;&#xA;         self.controller = controller;&#xD;&#xA;&#xD;&#xA;        c =   parent.get('timeSlots').then(function(data){&#xD;&#xA;            f =  self.controller.set('content', data); &#xD;&#xA;      &#xD;&#xA;         });          &#xD;&#xA;       }&#xD;&#xA;     })&#xD;&#xA;&#xD;&#xA;The datepicker controller that supplies array of dates that will be coloured in the datepicker. If we use the uncommented out version of of **dateArray computed property** that fetches **appointment startDate** the dates are coloured as expected. But if comment the first version and uncomment the second version of **dateArray computed property** that fetches **timeSlot by startTime** the calebdar are not coloured. **Any ideas why this so**.&#xD;&#xA;&#xD;&#xA;      App.DatePickerController =  Ember.ArrayController.extend({ &#xD;&#xA;         needs: ['appointments', 'appointment', 'timeSlot'],&#xD;&#xA;&#xD;&#xA;       time: Ember.computed.alias('controllers.timeSlot.content'),&#xD;&#xA;       appointments: Ember.computed.alias('controllers.appointments.content'),&#xD;&#xA;    &#xD;&#xA;       dateArray: function(){&#xD;&#xA;         _this = this;  &#xD;&#xA;         var fetchDates = _this.get('appointments');&#xD;&#xA;      &#xD;&#xA;         return  fetchDates.map(function(item){ &#xD;&#xA;           return moment.utc(item.get('startDate')).format(""YYYY-MM-DD"");&#xD;&#xA;         });&#xD;&#xA;       }.property('appointments.@each.startDate'),&#xD;&#xA;    &#xD;&#xA;       /*&#xD;&#xA;       dateArray: function(){&#xD;&#xA;         _this = this;  &#xD;&#xA;         var fetchDates = _this.get('time');&#xD;&#xA;      &#xD;&#xA;         return  fetchDates.map(function(item){ &#xD;&#xA;          return moment.utc(item.get('startTime')).format(""YYYY-MM-DD"");&#xD;&#xA;         });&#xD;&#xA;&#xD;&#xA;        }.property('timeSlot.@each.startTime'),  &#xD;&#xA;       */&#xD;&#xA;     });&#xD;&#xA;&#xD;&#xA;This is a smaller version of thesame code, I created a second **[jsfiddle](http://jsfiddle.net/Xajsr/2/)**. In this version the **datePicker** controller and route are removed and the code it had, were moved to the **appointment** controller. If you click on it, you will see that the **timeSlots** with appointment are not getting coloured in red which it should be.&#xD;&#xA;&#xD;&#xA;     &#xD;&#xA;      App.AppointmentController = Ember.ObjectController.extend({&#xD;&#xA;    &#xD;&#xA;        dateArray: function(){&#xD;&#xA;           _this = this;  &#xD;&#xA;       &#xD;&#xA;           fetchDates = [ ];&#xD;&#xA;        &#xD;&#xA;           var aa = _this.get('content'); &#xD;&#xA;               &#xD;&#xA;           var yy = aa.get('timeSlots');&#xD;&#xA;        &#xD;&#xA;            yy.then(function(hh){&#xD;&#xA;  &#xD;&#xA;              nn = hh.map(function(item){ return moment.utc(item.get('startTime')).format(""YYYY-MM-DD"");&#xD;&#xA;             });&#xD;&#xA;         &#xD;&#xA;         pp =  fetchDates.pushObjects([nn]);&#xD;&#xA;         &#xD;&#xA;         return nn;&#xD;&#xA;       });       &#xD;&#xA;     &#xD;&#xA;        return fetchDates;&#xD;&#xA;     }.property('content.@each.timeSlots')&#xD;&#xA;     &#xD;&#xA;   });&#xD;&#xA;&#xD;&#xA; Doing  **console log** suggestions the **dateArray** in the appointment controller returns an array in the form :&#xD;&#xA;&#xD;&#xA;      [Array[2]]&#xD;&#xA;&#xD;&#xA;But the array returned by the **datepickerController** when using the 1st version of  **dateArray computed property** that colors the calendar by **appointment startDate**,  is of the form:&#xD;&#xA;&#xD;&#xA;      [""2013-10-18"", ""2013-10-25"", ""2013-10-25"", ""2013-10-18""]&#xD;&#xA;&#xD;&#xA;**what I want**&#xD;&#xA;&#xD;&#xA; Is do a very click on  a date in datePicker to re-render the **timeSlot** template and secondly for me to be able to load **timeSlot startTime** in the calendar either using the **appointment controller** or the second version of **dateArray computed property** from the **datePicker controler**.&#xD;&#xA;&#xD;&#xA;**This is the screen-shot of the appointment startDate on the calendar basedon the first jsfiddle**&#xD;&#xA;![enter image description here][1]&#xD;&#xA;&#xD;&#xA;**This is the screenshot when I try to pass timeSlot startTime to the calendar based on either the 2nd jsfiddle, or the commented out dateAarray property in the datepicker controller of the 1st jsfiddle. Note the calendar remains uncoloured in both instances**&#xD;&#xA;![enter image description here][2]&#xD;&#xA;&#xD;&#xA;Thanks for your help.&#xD;&#xA;    &#xD;&#xA;  [1]: http://i.stack.imgur.com/7cNDy.png&#xD;&#xA;  [2]: http://i.stack.imgur.com/llYpE.png";;added 7 characters in body
