Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
65180330;23674146;1117789;2;a78b690e-9b43-4e72-845c-312068cef9f1;2014-05-15 09:22:53.0;"Yes, I know xstream, jaxb, yet I did not find how to marshal a object to xml string. &#xD;&#xA;I used this:&#xD;&#xA;&#xD;&#xA;	public static String java2xml(Object obj, Class<?> T) {&#xD;&#xA;&#xD;&#xA;	    XStream xstream = new XStream(new StaxDriver());&#xD;&#xA;	    xstream.processAnnotations(T);&#xD;&#xA;		String xml = xstream.toXML(obj);&#xD;&#xA;		&#xD;&#xA;		return xml;&#xD;&#xA;	}	&#xD;&#xA;&#xD;&#xA;Yet I got a `<outer-class reference=""../..""/>` in the output string.&#xD;&#xA;&#xD;&#xA;How can I get rid of it?&#xD;&#xA;&#xD;&#xA;Besides, I find it complicated to just do pretty print. What I had been expecting is something like &#xD;&#xA;`xstream.setPrettyPrint()` but actually in order to make a pretty print I have to set a StringWriter and use a `marshal` instead of `toXML`, this is all too comfusing.";;
65183083;23674146;1117789;5;8012ea21-16c8-4e05-ba8c-d21fd0c6d21d;2014-05-15 09:55:21.0;"I use xstream to marshal an object with nested class to xml string, &#xD;&#xA;I write this:&#xD;&#xA;&#xD;&#xA;	public static String java2xml(Object obj, Class<?> T) {&#xD;&#xA;&#xD;&#xA;	    XStream xstream = new XStream(new StaxDriver());&#xD;&#xA;	    xstream.processAnnotations(T);&#xD;&#xA;		String xml = xstream.toXML(obj);&#xD;&#xA;		&#xD;&#xA;		return xml;&#xD;&#xA;	}	&#xD;&#xA;&#xD;&#xA;Yet I got a `<outer-class reference=""../..""/>` inside the output string.&#xD;&#xA;&#xD;&#xA;Question1: How can I get rid of it?&#xD;&#xA;&#xD;&#xA;Question2: how to make a pretty-formatted xml string with xstream?&#xD;&#xA;&#xD;&#xA;In the previous post I have much emotional comments and make my question unclear, I edit my post and list the help I'm asking, thank you.&#xD;&#xA;";;change title to be more specified
65184383;23674146;1117789;5;c1c00e92-7578-4537-ba20-10a5aaee2f2f;2014-05-15 10:10:39.0;"I use xstream to marshal an object with nested class to xml string, &#xD;&#xA;I write this:&#xD;&#xA;&#xD;&#xA;	public static String java2xml(Object obj, Class<?> T) {&#xD;&#xA;&#xD;&#xA;	    XStream xstream = new XStream(new StaxDriver());&#xD;&#xA;	    xstream.processAnnotations(T);&#xD;&#xA;		String xml = xstream.toXML(obj);&#xD;&#xA;		&#xD;&#xA;		return xml;&#xD;&#xA;	}	&#xD;&#xA;&#xD;&#xA;Yet I got a `<outer-class reference=""../..""/>` inside the output string.&#xD;&#xA;&#xD;&#xA;the object class is:&#xD;&#xA;&#xD;&#xA;	public class Foo {&#xD;&#xA;		private String foocontent;&#xD;&#xA;		private Bar bar;&#xD;&#xA;		&#xD;&#xA;		// getter and setter&#xD;&#xA;&#xD;&#xA;		public void setFoocontent(String foocontent) {&#xD;&#xA;			this.foocontent = foocontent;&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		public class Bar {&#xD;&#xA;			private String blabla;&#xD;&#xA;			// getter and setter&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;	}&#xD;&#xA;&#xD;&#xA;and the whole xml is:&#xD;&#xA;&#xD;&#xA;	<?xml version=""1.0"" ?>&#xD;&#xA;	<me.mypackage.Foo>&#xD;&#xA;		<bar>&#xD;&#xA;			<blabla>hello</blabla>&#xD;&#xA;			<outer-class reference=""../..""/>&#xD;&#xA;		</bar>&#xD;&#xA;	</me.mypackage.Foo>&#xD;&#xA;&#xD;&#xA;Question1: How can I get rid of `outer-class` part?&#xD;&#xA;&#xD;&#xA;Question2: how to make a pretty-formatted xml string with xstream?&#xD;&#xA;&#xD;&#xA;In the previous post I have much emotional comments and make my question unclear, I edit my post and list the help I'm asking, thank you.&#xD;&#xA;";;"add the xml output "
65188833;23674146;1117789;5;901ca591-8aa2-403e-a553-7316c9d28135;2014-05-15 11:02:23.0;"I use xstream to marshal an object with nested class to xml string, &#xD;&#xA;I write this:&#xD;&#xA;&#xD;&#xA;	public static String java2xml(Object obj, Class<?> T) {&#xD;&#xA;&#xD;&#xA;	    XStream xstream = new XStream(new StaxDriver());&#xD;&#xA;	    xstream.processAnnotations(T);&#xD;&#xA;		String xml = xstream.toXML(obj);&#xD;&#xA;		&#xD;&#xA;		return xml;&#xD;&#xA;	}	&#xD;&#xA;&#xD;&#xA;Yet I got a `<outer-class reference=""../..""/>` inside the output string.&#xD;&#xA;&#xD;&#xA;the object class is:&#xD;&#xA;&#xD;&#xA;	public class Foo {&#xD;&#xA;		private String foocontent;&#xD;&#xA;		private Bar bar;&#xD;&#xA;		&#xD;&#xA;		// getter and setter&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;		public class Bar {&#xD;&#xA;			private String blabla;&#xD;&#xA;			// getter and setter&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;	}&#xD;&#xA;&#xD;&#xA;and I make a `Foo` with this code:&#xD;&#xA;&#xD;&#xA;		Foo foo = new Foo();&#xD;&#xA;		Bar bar = foo.new Bar();&#xD;&#xA;		bar.setBlabla(""hello"");&#xD;&#xA;		foo.setBar(bar);&#xD;&#xA;		String fooxml = Xutil.java2xml(foo, Foo.class);&#xD;&#xA;		System.out.println(fooxml);&#xD;&#xA;&#xD;&#xA;and the whole xml is:&#xD;&#xA;&#xD;&#xA;	<?xml version=""1.0"" ?>&#xD;&#xA;	<me.mypackage.Foo>&#xD;&#xA;		<bar>&#xD;&#xA;			<blabla>hello</blabla>&#xD;&#xA;			<outer-class reference=""../..""/>&#xD;&#xA;		</bar>&#xD;&#xA;	</me.mypackage.Foo>&#xD;&#xA;&#xD;&#xA;Question1: How can I get rid of `outer-class` part?&#xD;&#xA;&#xD;&#xA;Question2: how to make a pretty-formatted xml string with xstream?&#xD;&#xA;&#xD;&#xA;In the previous post I have much emotional comments and make my question unclear, I edit my post and list the help I'm asking, thank you.&#xD;&#xA;";;added the making of a Foo instance
