Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
106519310;34309686;3708197;2;d4fa09b9-6e27-4aaf-a731-a7bfb41aadf6;2015-12-16 10:34:36.0;"I Have an object with more than 250 attribute , I want to do a group by two columns (string) and then sum all the rest (double) , &#xD;&#xA;is there any solution to avoid making the sum one by one and do it for all double attributes ";;
106520671;34309686;3708197;5;cec030dc-e820-48e4-b240-390d890880ee;2015-12-16 10:51:24.0;"I Have a List object (object with more than 250 attribute) , I want to do a group by two columns (string) and then sum all the rest (double) , &#xD;&#xA;is there any solution to avoid making the sum one by one and do it for all double attributes ,&#xD;&#xA;&#xD;&#xA;This list I'm getting it from XML file and not from a database query ";;added 87 characters in body
106522702;34309686;3708197;5;cd05b28b-5c18-44ce-8e54-09f7b335fc8f;2015-12-16 11:14:55.0;"I Have a List object (object with more than 250 attribute) , I want to do a group by two columns (string) and then sum all the rest (double) , &#xD;&#xA;is there any solution to avoid making the sum one by one and do it for all double attributes ,&#xD;&#xA;&#xD;&#xA;This list I'm getting it from XML file and not from a database query &#xD;&#xA;&#xD;&#xA;    var xx = Data.MyList.GroupBy(grp => new MyObject()&#xD;&#xA;                {&#xD;&#xA;                    Name = grp.Name,&#xD;&#xA;                    Date = grp.Date,&#xD;&#xA;                    SubBook = grp.Sub&#xD;&#xA;                }).Select(slt => new MyObject()&#xD;&#xA;                {&#xD;&#xA;                    Name = slt.Key.Name,&#xD;&#xA;                    Date = slt.Key.Date,&#xD;&#xA;                    Sub = slt.Key.Sub,&#xD;&#xA;                    eq = slt.Sum(x=>x.eq),&#xD;&#xA;                    eq1 = slt.Sum(x=>x.eq1),&#xD;&#xA;                    eq2 = slt.Sum(x=>x.eq2),&#xD;&#xA;                    eq3 = slt.Sum(x=>x.eq3),&#xD;&#xA;                    .&#xD;&#xA;                    .&#xD;&#xA;                    .&#xD;&#xA;                    eq250 = slt.Sum(x=>x.eq2505),&#xD;&#xA;                    }).ToList();";;added 720 characters in body
106523052;34309686;3708197;5;d8b28ee2-bd67-454f-aa7d-201195cc4e0b;2015-12-16 11:18:46.0;"I Have a List object (object with more than 250 attribute) , I want to do a group by two columns (string) and then sum all the rest (double) , &#xD;&#xA;is there any solution to avoid making the sum one by one and do it for all double attributes ,&#xD;&#xA;&#xD;&#xA;This list I'm getting it from XML file and not from a database query &#xD;&#xA;&#xD;&#xA;    var xx = Data.MyList.GroupBy(grp => new MyObject()&#xD;&#xA;                {&#xD;&#xA;                    Name = grp.Name,&#xD;&#xA;                    Date = grp.Date,&#xD;&#xA;   &#xD;&#xA;                }).Select(slt => new MyObject()&#xD;&#xA;                {&#xD;&#xA;                    Name = slt.Key.Name,&#xD;&#xA;                    Date = slt.Key.Date,&#xD;&#xA;&#xD;&#xA;                    eq = slt.Sum(x=>x.eq),&#xD;&#xA;                    eq1 = slt.Sum(x=>x.eq1),&#xD;&#xA;                    eq2 = slt.Sum(x=>x.eq2),&#xD;&#xA;                    eq3 = slt.Sum(x=>x.eq3),&#xD;&#xA;                    .&#xD;&#xA;                    .&#xD;&#xA;                    .&#xD;&#xA;                    eq250 = slt.Sum(x=>x.eq2505),&#xD;&#xA;                    }).ToList();";;deleted 2 characters in body
106524991;34309686;3708197;5;b45944a4-a7e4-4125-8d75-0ef5dd6c9902;2015-12-16 11:43:49.0;"I Have a List object (object with more than 250 attribute) , I want to do a group by two columns (string) and then sum all the rest (double) , &#xD;&#xA;is there any solution to avoid making the sum one by one and do it for all double attributes ,&#xD;&#xA;&#xD;&#xA;This list I'm getting it from XML file and not from a database query &#xD;&#xA;&#xD;&#xA;    var xx = Data.MyList.GroupBy(grp => new MyObject()&#xD;&#xA;                {&#xD;&#xA;                    Name = grp.Name,&#xD;&#xA;                    Date = grp.Date,&#xD;&#xA;   &#xD;&#xA;                }).Select(slt => new MyObject()&#xD;&#xA;                {&#xD;&#xA;                    Name = slt.Key.Name,&#xD;&#xA;                    Date = slt.Key.Date,&#xD;&#xA;&#xD;&#xA;                    eq = slt.Sum(x=>x.eq),&#xD;&#xA;                    eq1 = slt.Sum(x=>x.eq1),&#xD;&#xA;                    eq2 = slt.Sum(x=>x.eq2),&#xD;&#xA;                    eq3 = slt.Sum(x=>x.eq3),&#xD;&#xA;                    .&#xD;&#xA;                    .&#xD;&#xA;                    .&#xD;&#xA;                    eq250 = slt.Sum(x=>x.eq2505),&#xD;&#xA;                    }).ToList();&#xD;&#xA;&#xD;&#xA;I have triesd the solution of HimBromBeere&#xD;&#xA;&#xD;&#xA;     var grpBySub = Data.MyList.GroupBy(grp => new &#xD;&#xA;                {&#xD;&#xA;                     grp.Name,&#xD;&#xA;                     grp.Date,&#xD;&#xA;                     grp.Book&#xD;&#xA;                }).Select(slt => new&#xD;&#xA;                {&#xD;&#xA;                     slt.Key.Name,&#xD;&#xA;                     slt.Key.Date,&#xD;&#xA;                     slt.Key.Book,&#xD;&#xA;                     Sums = slt.Select(y => y.GetType().GetProperties().Sum(z => (Double)z.GetValue(y, null)))&#xD;&#xA;    &#xD;&#xA;                }).ToList();&#xD;&#xA;&#xD;&#xA; , but this is what I'm getting &#xD;&#xA;&#xD;&#xA;> { Name = ABC, Date = 10-Dec-2015, Sub = RECAP, Sums =&#xD;&#xA;> System.Linq.Enumerable+WhereSelectEnumerableIterator`2[RiskCheckPivot.Model.MainView,System.Double]&#xD;&#xA;> }&#xD;&#xA;&#xD;&#xA;";;added 735 characters in body
106525556;34309686;3708197;5;b6ddbf82-db46-44c5-9922-d687116460e7;2015-12-16 11:50:08.0;"I Have a List object (object with more than 250 attribute) , I want to do a group by two columns (string) and then sum all the rest (double) , &#xD;&#xA;is there any solution to avoid making the sum one by one and do it for all double attributes ,&#xD;&#xA;&#xD;&#xA;This list I'm getting it from XML file and not from a database query &#xD;&#xA;&#xD;&#xA;    var xx = Data.MyList.GroupBy(grp => new MyObject()&#xD;&#xA;                {&#xD;&#xA;                    Name = grp.Name,&#xD;&#xA;                    Date = grp.Date,&#xD;&#xA;   &#xD;&#xA;                }).Select(slt => new MyObject()&#xD;&#xA;                {&#xD;&#xA;                    Name = slt.Key.Name,&#xD;&#xA;                    Date = slt.Key.Date,&#xD;&#xA;&#xD;&#xA;                    eq = slt.Sum(x=>x.eq),&#xD;&#xA;                    eq1 = slt.Sum(x=>x.eq1),&#xD;&#xA;                    eq2 = slt.Sum(x=>x.eq2),&#xD;&#xA;                    eq3 = slt.Sum(x=>x.eq3),&#xD;&#xA;                    .&#xD;&#xA;                    .&#xD;&#xA;                    .&#xD;&#xA;                    eq250 = slt.Sum(x=>x.eq2505),&#xD;&#xA;                    }).ToList();&#xD;&#xA;&#xD;&#xA;I have triesd the solution of HimBromBeere&#xD;&#xA;&#xD;&#xA;     var grpBySub = Data.MyList.GroupBy(grp => new &#xD;&#xA;                {&#xD;&#xA;                     grp.Name,&#xD;&#xA;                     grp.Date,&#xD;&#xA;                     grp.Book&#xD;&#xA;                }).Select(slt => new&#xD;&#xA;                {&#xD;&#xA;                     slt.Key.Name,&#xD;&#xA;                     slt.Key.Date,&#xD;&#xA;                     slt.Key.Book,&#xD;&#xA;                     Sums = slt.Select(y => y.GetType().GetProperties().Sum(z => (Double)z.GetValue(y, null)))&#xD;&#xA;    &#xD;&#xA;                }).ToList();&#xD;&#xA;&#xD;&#xA; , but this is what I'm getting &#xD;&#xA;&#xD;&#xA;> { Name = ABC, Date = 10-Dec-2015, Sub = RECAP, Sums =&#xD;&#xA;> System.Linq.Enumerable+WhereSelectEnumerableIterator`2[CheckPivot.Model.MyObject,System.Double]&#xD;&#xA;> }&#xD;&#xA;&#xD;&#xA;";;deleted 4 characters in body
106528133;34309686;3708197;5;045b5c42-6e5e-46c7-a5bb-2e681aa74e9a;2015-12-16 12:22:16.0;"I Have a List object (object with more than 250 attribute) , I want to do a group by two columns (string) and then sum all the rest (double) , &#xD;&#xA;is there any solution to avoid making the sum one by one and do it for all double attributes ,&#xD;&#xA;&#xD;&#xA;This list I'm getting it from XML file and not from a database query &#xD;&#xA;&#xD;&#xA;    var xx = Data.MyList.GroupBy(grp => new MyObject()&#xD;&#xA;                {&#xD;&#xA;                    Name = grp.Name,&#xD;&#xA;                    Date = grp.Date,&#xD;&#xA;   &#xD;&#xA;                }).Select(slt => new MyObject()&#xD;&#xA;                {&#xD;&#xA;                    Name = slt.Key.Name,&#xD;&#xA;                    Date = slt.Key.Date,&#xD;&#xA;&#xD;&#xA;                    eq = slt.Sum(x=>x.eq),&#xD;&#xA;                    eq1 = slt.Sum(x=>x.eq1),&#xD;&#xA;                    eq2 = slt.Sum(x=>x.eq2),&#xD;&#xA;                    eq3 = slt.Sum(x=>x.eq3),&#xD;&#xA;                    .&#xD;&#xA;                    .&#xD;&#xA;                    .&#xD;&#xA;                    eq250 = slt.Sum(x=>x.eq2505),&#xD;&#xA;                    }).ToList();&#xD;&#xA;&#xD;&#xA;I have triesd the solution of HimBromBeere&#xD;&#xA;&#xD;&#xA;     var grpBySub = Data.MyList.GroupBy(grp => new&#xD;&#xA;            {&#xD;&#xA;                 grp.Name,&#xD;&#xA;                 grp.Date,&#xD;&#xA;                 grp.Sub&#xD;&#xA;            }).Select(slt => new &#xD;&#xA;            {&#xD;&#xA;                slt.Key.Name,&#xD;&#xA;                slt.Key.Date,&#xD;&#xA;                slt.Key.Sub,&#xD;&#xA;                Sums = typeof(MyObject).GetProperties().Select(p => new&#xD;&#xA;                {&#xD;&#xA;                    p.Name,&#xD;&#xA;                    Sum = slt.Sum(entity => (int)p.GetValue(entity, null)) &#xD;&#xA;&#xD;&#xA;                }).ToList()&#xD;&#xA;&#xD;&#xA;            }).ToList();&#xD;&#xA;&#xD;&#xA; , but I'm getting this exception &#xD;&#xA;&#xD;&#xA;> InvalidcastException was unhandled&#xD;&#xA;&#xD;&#xA;";;deleted 53 characters in body
106529995;34309686;3708197;5;1542ee01-b327-438f-b3f7-22b986f8090a;2015-12-16 12:43:23.0;"I Have a List object (object with more than 250 attribute) , I want to do a group by two columns (string) and then sum all the rest (double) , &#xD;&#xA;is there any solution to avoid making the sum one by one and do it for all double attributes ,&#xD;&#xA;&#xD;&#xA;This list I'm getting it from XML file and not from a database query &#xD;&#xA;&#xD;&#xA;    var xx = Data.MyList.GroupBy(grp => new MyObject()&#xD;&#xA;                {&#xD;&#xA;                    Name = grp.Name,&#xD;&#xA;                    Date = grp.Date,&#xD;&#xA;   &#xD;&#xA;                }).Select(slt => new MyObject()&#xD;&#xA;                {&#xD;&#xA;                    Name = slt.Key.Name,&#xD;&#xA;                    Date = slt.Key.Date,&#xD;&#xA;&#xD;&#xA;                    eq = slt.Sum(x=>x.eq),&#xD;&#xA;                    eq1 = slt.Sum(x=>x.eq1),&#xD;&#xA;                    eq2 = slt.Sum(x=>x.eq2),&#xD;&#xA;                    eq3 = slt.Sum(x=>x.eq3),&#xD;&#xA;                    .&#xD;&#xA;                    .&#xD;&#xA;                    .&#xD;&#xA;                    eq250 = slt.Sum(x=>x.eq2505),&#xD;&#xA;                    }).ToList();&#xD;&#xA;&#xD;&#xA;Thanks to HimBromBeere here is the Solution&#xD;&#xA;&#xD;&#xA;     var grpBySub = Data.MyList.GroupBy(grp => new&#xD;&#xA;            {&#xD;&#xA;                 grp.Name,&#xD;&#xA;                 grp.Date,&#xD;&#xA;            }).Select(slt => new &#xD;&#xA;            {&#xD;&#xA;                slt.Key.Name,&#xD;&#xA;                slt.Key.Date,&#xD;&#xA;                Sums = typeof(MyObject).GetProperties().Where(y =>&#xD;&#xA;                    y.Name != ""Name"" &&&#xD;&#xA;                    y.Name != ""Date"" &&&#xD;&#xA;&#xD;&#xA;                    ).Select(p => new&#xD;&#xA;                {&#xD;&#xA;                    p.Name,&#xD;&#xA;                    Sum = slt.Sum(entity => ((double?)p.GetValue(entity, null))) &#xD;&#xA;&#xD;&#xA;                }).ToList()&#xD;&#xA;&#xD;&#xA;            }).ToList();&#xD;&#xA;&#xD;&#xA;";;added 82 characters in body
